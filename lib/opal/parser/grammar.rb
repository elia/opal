#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'
module Opal
  class Parser < Racc::Parser


##### State transition tables begin ###

clist = [
'63,64,65,8,51,563,-91,-92,57,58,269,-505,563,61,269,59,60,62,23,24,66',
'67,-84,606,-89,840,664,22,28,27,89,88,90,91,519,-82,17,636,269,675,-444',
'-64,7,41,6,9,93,92,780,83,50,85,84,86,-95,87,94,95,73,81,82,652,38,39',
'-435,636,74,569,653,570,635,-435,-507,-89,-90,264,-505,-88,-75,264,-94',
'-80,-94,443,36,605,540,30,-88,-84,52,202,203,54,-93,32,268,-505,635',
'40,268,532,-82,576,534,202,203,18,304,-92,-83,-84,79,73,75,76,77,78',
'100,-435,562,74,80,99,268,100,-84,562,-81,56,99,-95,53,-84,-274,37,63',
'64,65,-82,51,-274,-274,-274,57,58,-82,-274,-274,61,-274,59,60,62,255',
'256,66,67,-87,785,-508,570,707,254,287,291,89,88,90,91,-274,-274,216',
'-274,-274,-274,-274,-274,-82,288,304,-80,93,92,-86,83,50,85,84,86,539',
'87,94,95,100,81,82,636,-85,99,636,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,202,203,-274,-274,-274,285,625,-92',
'282,-92,-274,52,-92,652,54,635,575,-274,635,-274,653,-274,-274,-274',
'-274,-274,-274,-274,264,-274,-90,-274,-435,79,73,75,76,77,78,-435,297',
'298,74,80,-274,-274,100,-85,706,-274,56,99,-274,53,-93,-511,292,63,64',
'65,304,51,-511,-511,-511,57,58,574,-511,-511,61,-511,59,60,62,255,256',
'66,67,532,-511,398,534,707,254,28,27,89,88,90,91,-511,-511,216,-511',
'-511,-511,-511,-511,532,41,264,534,93,92,776,83,50,85,84,86,258,87,94',
'95,563,81,82,532,38,39,531,-511,-511,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,-511,-511,584,775,-511,-511,-511,207,622,-90,211,-90',
'-511,52,-90,-91,54,224,253,-511,224,-511,40,-511,-511,-511,-511,-511',
'-511,-511,215,-511,-511,-511,-83,79,73,75,76,77,78,770,563,707,74,80',
'-511,-511,100,-83,706,-511,56,99,-511,53,-91,100,37,63,64,65,99,51,202',
'203,-442,57,58,563,202,203,61,-442,59,60,62,23,24,66,67,202,203,804',
'785,785,22,28,27,89,88,90,91,-507,100,17,562,-438,559,99,-507,-83,41',
'594,-438,93,92,583,83,50,85,84,86,511,87,94,95,594,81,82,512,38,39,340',
'339,632,100,-441,-91,594,-91,99,599,-91,-441,-444,782,769,-83,804,785',
'791,100,207,706,-83,211,99,658,52,759,792,54,304,-440,100,251,562,40',
'546,99,-440,-268,596,595,592,18,549,510,-268,558,79,73,75,76,77,78,596',
'595,795,74,80,100,-88,562,863,742,99,56,596,595,53,758,-511,37,63,64',
'65,-92,51,-511,-511,-511,57,58,-511,-511,-511,61,-511,59,60,62,255,256',
'66,67,-268,-511,-511,-511,796,254,287,291,89,88,90,91,-511,-511,216',
'-511,-511,-511,-511,-511,549,41,799,-90,93,92,480,83,50,85,84,86,-432',
'87,94,95,594,81,82,-432,38,39,478,-511,-511,-511,-511,-511,-511,-511',
'-511,-511,-511,-511,-511,-511,-511,340,339,-511,-511,-511,207,760,-511',
'211,-439,-511,52,785,-511,54,-511,-439,-511,808,-511,40,-511,-511,-511',
'-511,-511,-511,-511,215,-511,-511,-511,809,79,73,75,76,77,78,596,595',
'597,74,80,-511,-511,-511,-511,600,-511,56,811,-511,53,-91,-274,37,63',
'64,65,549,51,-274,-274,-274,57,58,-274,-274,-274,61,-274,59,60,62,255',
'256,66,67,202,203,-274,-274,547,254,287,291,89,88,90,91,-274,-274,216',
'-274,-274,-274,-274,-274,546,41,515,516,93,92,543,83,50,85,84,86,-321',
'87,94,95,594,81,82,-321,38,39,604,-274,-274,-274,-274,-274,-274,-274',
'-274,-274,-274,-274,-274,-274,-274,480,-507,-274,-274,-274,207,625,-274',
'211,589,-274,52,813,-274,54,-274,590,-274,608,-274,40,-274,-274,-274',
'-274,-274,-274,-274,215,-274,-321,-274,611,79,73,75,76,77,78,596,595',
'607,74,80,-274,-274,-274,-274,536,-274,56,535,-274,53,-93,-370,37,63',
'64,65,761,51,-370,-370,-370,57,58,-370,-370,-370,61,-370,59,60,62,255',
'256,66,67,614,-370,-370,-370,-254,254,287,291,89,88,90,91,-370,-370',
'216,-370,-370,-370,-370,-370,821,41,823,826,93,92,615,83,50,85,84,86',
'261,87,94,95,594,81,82,262,38,39,828,-370,-370,-370,-370,-370,-370,-370',
'-370,-370,-370,-370,-370,-370,-370,304,100,-370,-370,-370,207,99,-370',
'211,264,-370,52,830,-370,54,-370,487,-370,224,-370,40,-370,-370,-370',
'-370,-370,-370,-370,215,-370,-370,-370,521,79,73,75,76,77,78,596,595',
'601,74,80,-370,-370,-370,-370,-256,-370,56,520,-370,53,487,-269,37,63',
'64,65,264,51,-269,-269,-269,57,58,-269,-269,-269,61,-269,59,60,62,255',
'256,66,67,264,304,-269,-269,-269,254,287,291,89,88,90,91,-269,-269,216',
'-269,-269,-269,-269,-269,273,41,513,506,93,92,505,83,50,85,84,86,199',
'87,94,95,-255,81,82,200,38,39,504,-269,-269,-269,-269,-269,-269,-269',
'-269,-269,-269,-269,-269,-269,-269,617,100,-269,-269,-269,207,99,-269',
'211,-437,-269,52,841,-269,54,-269,-437,-269,842,-269,40,-269,-269,-269',
'-269,-269,-269,-269,215,-269,198,-269,843,79,73,75,76,77,78,264,264',
'-84,74,80,-269,-269,-269,-269,-92,-269,56,-269,-269,53,744,-282,37,63',
'64,65,243,51,-282,-282,-282,57,58,-282,-282,-282,61,-282,59,60,62,255',
'256,66,67,-63,846,-282,-282,847,254,287,291,89,88,90,91,-282,-282,216',
'-282,-282,-282,-282,-282,675,41,224,849,93,92,224,83,50,85,84,86,258',
'87,94,95,-254,81,82,853,38,39,487,-282,-282,-282,-282,-282,-282,-282',
'-282,-282,-282,-282,-282,-282,-282,748,100,-282,-282,-282,207,99,-282',
'211,273,-282,52,224,-282,54,-282,224,-282,251,-282,40,-282,-282,-282',
'-282,-282,-282,-282,215,-282,480,-282,478,79,73,75,76,77,78,860,476',
'-81,74,80,-282,-282,-282,-282,-89,-282,56,212,-282,53,445,-527,37,63',
'64,65,444,51,-527,-527,-527,57,58,-527,-527,-527,61,-527,59,60,62,255',
'256,66,67,710,-527,-527,-527,866,254,287,291,89,88,90,91,-527,-527,216',
'-527,-527,-527,-527,-527,868,41,869,304,93,92,570,83,50,85,84,86,258',
'87,94,95,702,81,82,699,38,39,442,-527,-527,-527,-527,-527,-527,-527',
'-527,-527,-527,-527,-527,-527,-527,201,100,-527,-527,-527,207,99,-527',
'211,264,-527,52,879,-527,54,-527,641,-527,251,-527,40,-527,-527,-527',
'-527,-527,-527,-527,215,-527,-527,-527,-257,79,73,75,76,77,78,697,409',
'-87,74,80,-527,-527,-527,-527,-95,-527,56,880,-527,53,882,-527,37,63',
'64,65,687,51,-527,-527,-527,57,58,-527,-527,-527,61,-527,59,60,62,255',
'256,66,67,396,387,-527,-508,549,254,28,27,89,88,90,91,-527,-527,216',
'-527,-527,-527,-527,-527,384,41,519,892,93,92,893,83,50,85,84,86,258',
'87,94,95,683,81,82,682,38,39,304,224,228,233,234,235,230,232,240,241',
'236,237,-527,217,218,616,898,238,239,-527,207,-86,100,211,264,-527,52',
'99,-94,54,899,253,221,826,227,40,223,222,219,220,231,229,225,215,226',
'826,-527,828,79,73,75,76,77,78,681,649,-82,74,80,-527,242,-527,-227',
'-90,-527,56,296,304,53,295,-527,37,63,64,65,908,51,-527,-527,-527,57',
'58,-527,-527,-527,61,-527,59,60,62,23,24,66,67,675,243,-527,525,654',
'22,28,27,89,88,90,91,-527,-527,17,-527,-527,-527,-527,-527,914,41,243',
'667,93,92,681,83,50,85,84,86,-275,87,94,95,197,81,82,-275,38,39,196',
'224,228,233,234,235,230,232,240,241,236,237,-527,217,218,439,195,238',
'239,-527,207,194,440,211,264,-527,52,662,924,54,826,926,221,927,227',
'40,223,222,219,220,231,229,225,18,226,-275,-527,224,79,73,75,76,77,78',
'107,-276,-443,74,80,-527,242,-527,-276,-443,-527,56,665,-75,53,96,441',
'37,63,64,65,8,51,858,221,,57,58,223,222,,61,,59,60,62,23,24,66,67,102',
'103,104,105,106,22,28,27,89,88,90,91,,,17,-275,-276,-443,,612,7,41,-275',
'9,93,92,,83,50,85,84,86,-443,87,94,95,,81,82,-443,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,906,217,218,-268,,238,239,907,36,,-268',
'30,,,52,,-275,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226',
'-443,,224,79,73,75,76,77,78,522,,580,74,80,,242,523,-227,578,,56,,905',
'53,,-268,37,63,64,65,8,51,,221,,57,58,223,222,,61,,59,60,62,23,24,66',
'67,102,103,104,105,106,22,28,27,89,88,90,91,,,17,441,,579,,612,7,41',
',9,93,92,,83,50,85,84,86,572,87,94,95,,81,82,573,38,39,,224,228,233',
'234,235,230,232,240,241,236,237,-275,217,218,-274,,238,239,-275,36,',
'-274,30,,,52,-508,,54,,32,221,,227,40,223,222,219,220,231,229,225,18',
'226,571,,,79,73,75,76,77,78,-274,580,-276,74,80,,242,-274,794,-276,',
'56,-508,-275,53,,-274,37,63,64,65,,51,406,,,57,58,408,407,,61,,59,60',
'62,23,24,66,67,102,103,104,105,106,22,28,27,89,88,90,91,,,17,-274,579',
'-276,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,-274,,238,239,,207,,-274',
'211,212,,52,-508,,54,,,221,,227,40,223,222,219,220,231,229,225,18,226',
',,,79,73,75,76,77,78,,,,74,80,,242,633,,689,,56,,,53,,-274,37,63,64',
'65,,51,,832,833,57,58,834,94,95,61,,59,60,62,23,24,66,67,,,,,,22,28',
'27,89,88,90,91,,,216,337,336,340,339,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,875,,238,239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,337,336,340,339',
'56,,,53,,,37,63,64,65,224,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,221,,216,,223,222,219,220,,41,,,93,92,',
'83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232',
'240,241,236,237,,217,218,875,,238,239,,207,,,211,,,52,,,54,,641,221',
',227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76,77,78,,,',
'74,80,,242,337,336,340,339,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,551,17,332,330,329',
',331,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,689,,238,239,,36,,,30,',
',52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,242,337,336,340,339,56,,,53,,,37,63,64,65,224',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91',
'221,,216,,223,222,219,220,,41,,,93,92,,83,50,85,84,86,258,87,94,95,',
'81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,',
',238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,551,216,332,330,329,,331,,41,,,93,92,,83,50,85,84,86,258,87',
'94,95,,81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217',
'218,,,238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220',
'231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,',
',37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,',
'81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,',
',238,239,,207,,,211,,,52,,,54,,253,221,251,227,40,223,222,219,220,231',
'229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81',
'82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,217,218,,,238',
'239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215',
'226,,,,79,73,75,76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228',
'233,234,235,230,232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52',
',,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75',
'76,77,78,,,,74,80,,242,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230',
'232,240,241,236,237,,217,218,,,238,239,,36,,,30,,,52,,,54,,32,221,,227',
'40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80',
',242,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,224,228,233,234,235,230,232,240,241,236,237,224',
'217,218,,,238,239,,,,,,693,,,211,238,239,52,,221,54,227,,223,222,219',
'220,231,229,225,221,226,,,223,222,219,220,,79,73,75,76,77,78,,,242,74',
'80,,551,,332,330,329,56,331,,53,,,292,63,64,65,8,51,,,,57,58,,,,61,',
'59,60,62,23,24,66,67,,,,,554,22,28,27,89,88,90,91,801,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235',
'230,232,240,241,236,237,,217,218,,,238,239,,36,,,277,,,52,,,54,,32,221',
',227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,242,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,224,228,233,234,235,230,232,240,241,236,237,224',
'217,218,,,238,239,,,,,,285,,,282,238,239,52,,221,54,227,281,223,222',
'219,220,231,229,225,221,226,227,,223,222,219,220,,79,73,75,76,77,78',
',,242,74,80,,551,,332,330,329,56,331,,53,,,292,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,554,254,287,291,89,88,90,91,557,551',
'216,332,330,329,,331,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323',
',332,330,329,,331,,,,,,554,,,,,,,,557,,,285,,,211,,,52,,,54,,,,,,334',
',,,,,,,337,336,340,339,,79,73,75,76,77,78,763,,,74,80,,,,294,,,56,,',
'53,,,292,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,240,241,236,237,,-528,-528',
',,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219,220,231,229',
'225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224',
',,,,,,,,,,,,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219',
'220,,,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',224,-528,-528,-528,-528,230,232,,,-528,-528,,,,,,238,239,,36,,,30,',
',52,,,54,,32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,',
'238,239,,207,,,211,,,52,,,54,,641,221,251,227,40,223,222,219,220,,,225',
'215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224',
'-528,-528,-528,-528,230,232,,,-528,-528,,,,,,238,239,,207,,,211,,,52',
',,54,,,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234,235,230,232',
',,236,237,,,,,,238,239,,207,,,211,,,52,,,54,,,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,224,-528,-528,-528,-528,230,232,,,-528,-528,,,,,,238,239',
',207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215,226',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,224,228,233,234',
'235,230,232,240,241,236,237,,-528,-528,,,238,239,,36,,,30,,,52,,,54',
',32,221,,227,40,223,222,219,220,231,229,225,18,226,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,224,-528,-528,-528,-528,230,232,,',
'-528,-528,,,,,,238,239,,36,,,30,,,52,,,54,,32,221,,227,40,223,222,219',
'220,231,229,225,18,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,',
',37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28',
'27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,',
'81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,54,,253,221',
',227,40,223,222,219,220,,,225,215,226,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,207,,,211,,,52,,,54',
',,221,,227,40,223,222,219,220,,,225,18,226,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,258,87,94,95,,81,82,,38,39,,224,-528,-528,-528,-528,230,232,,,-528',
'-528,,,,,,238,239,,207,,,211,,,52,,,54,,253,221,,227,40,223,222,219',
'220,231,229,225,215,226,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,224,228,233,234,235,230,232,240,,236,237,,,,,,238,239',
',207,,,211,,,52,,,54,,,221,,227,40,223,222,219,220,231,229,225,215,226',
',,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,',
',,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,224,-528',
'-528,-528,-528,230,232,,,-528,-528,,,,,,238,239,,207,,,211,,,52,,,54',
',253,221,,227,40,223,222,219,220,231,229,225,215,226,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,224,,,,,,,,,,,,,,,,238,239,,36',
',,30,,,52,,,54,,32,221,,227,40,223,222,219,220,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,',
'38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
'100,,,,,99,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,736,,332,330,329,,331,,,,,,,,,,,,,,,,,352,,,30',
',,52,,,54,,32,,,,334,,,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85',
'84,357,,87,94,95,,81,82,323,,332,330,329,,331,,,,,,,,,,,,,,363,,,358',
',,211,,,52,,,54,,,,,,334,,542,,,,,,337,336,340,339,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,641,,,,40,,,,,,,,215,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,288,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,736,,332,330,329,735,331,,,,,,,,,,,,,,,,,887,,,211',
',,52,,,54,,,,,,334,729,,,,,,,337,336,340,339,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'-504,-504,-504,,-504,,,,-504,-504,,,,-504,,-504,-504,-504,-504,-504',
'-504,-504,,-504,,,,-504,-504,-504,-504,-504,-504,-504,,,-504,,,,,,,-504',
',,-504,-504,,-504,-504,-504,-504,-504,-504,-504,-504,-504,,-504,-504',
',-504,-504,,,,,,,,,,,,,,,,,,,,,-504,,,-504,-504,,-504,,,-504,,-504,',
'-504,,-504,,,,,,,,-504,,-504,,,-504,-504,-504,-504,-504,-504,,,,-504',
'-504,,,,,,,-504,,,-504,,,-504,-505,-505,-505,,-505,,,,-505,-505,,,,-505',
',-505,-505,-505,-505,-505,-505,-505,,-505,,,,-505,-505,-505,-505,-505',
'-505,-505,,,-505,,,,,,,-505,,,-505,-505,,-505,-505,-505,-505,-505,-505',
'-505,-505,-505,,-505,-505,,-505,-505,,,,,,,,,,,,,,,,,,,,,-505,,,-505',
'-505,,-505,,,-505,,-505,,-505,,-505,,,,,,,,-505,,-505,,,-505,-505,-505',
'-505,-505,-505,,,,-505,-505,,,,,,,-505,,,-505,,,-505,63,64,65,,51,,',
',57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,',
'216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,',
',,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,398,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22',
'28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18',
',,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52',
',,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,6,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41',
',9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,415',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,415,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253',
',,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,747,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23',
'24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88',
'90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,-510,-510',
'-510,,-510,,,,-510,-510,,,,-510,,-510,-510,-510,-510,-510,-510,-510',
',,,,,-510,-510,-510,-510,-510,-510,-510,,,-510,,,,,,,-510,,,-510,-510',
',-510,-510,-510,-510,-510,-510,-510,-510,-510,,-510,-510,,-510,-510',
',,,,,,,,,,,,,,,,,,,,-510,,,-510,-510,,-510,,,-510,,-510,,-510,,-510',
',,,,,,,-510,,,,,-510,-510,-510,-510,-510,-510,,,,-510,-510,,,,,,,-510',
',,-510,,,-510,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,',
',,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40',
',,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,-509,-509',
'-509,,-509,,,,-509,-509,,,,-509,,-509,-509,-509,-509,-509,-509,-509',
',,,,,-509,-509,-509,-509,-509,-509,-509,,,-509,,,,,,,-509,,,-509,-509',
',-509,-509,-509,-509,-509,-509,-509,-509,-509,,-509,-509,,-509,-509',
',,,,,,,,,,,,,,,,,,,,-509,,,-509,-509,,-509,,,-509,,-509,,-509,,-509',
',,,,,,,-509,,,,,-509,-509,-509,-509,-509,-509,,,,-509,-509,,,,,,,-509',
',,-509,,,-509,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,',
',22,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94',
'95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8',
'51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,',
'17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,',
',,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,447',
'52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,',
'53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,',
',,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92',
',83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211',
',,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56',
',,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,',
',,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,',
'51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90',
'91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,',
',,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75',
'76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59',
'60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,',
',211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,',
',,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67',
',,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86',
',87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,',
',40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63',
'64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,',
',,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,398,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,',
',,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,',
',,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89',
'88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,251,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216',
',,,,,,41,,,93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,',
',,,,,,,,,,,,207,,,211,,,496,,,54,,253,,251,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,',
'93,92,,83,50,85,84,86,258,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,',
',207,,,211,,500,52,,,54,,253,,251,,40,,,,,,,,215,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62',
'23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,',
'54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,253,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51',
',,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17',
',,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,',
',,,,,,,,,,,36,,,277,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77',
'78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62',
'255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83',
'50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,',
'52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,',
',53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254',
'287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95',
',81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,',
',215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51',
',,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91',
',,216,,,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,736,,332,330',
'329,735,331,,,,,,,,,,,,,,,,,285,,,211,,,52,,,54,,,,,,334,,,,,,,,337',
'336,340,339,,79,73,75,76,77,78,,,,74,80,,,,508,,,56,,,53,,,292,63,64',
'65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90',
'91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,',
',,,,,,,,,,,,,,,,,,,36,,,277,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61',
',59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291',
'89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,',
',,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66',
'67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,',
'40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64',
'65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88',
'90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39',
',,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73',
'75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,,,61',
',59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,,9,93',
'92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,36,,',
'30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,',
',,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,',
',,,,254,28,27,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,258',
'87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,641',
',251,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329,,331,',
',,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,334,,,,,,,,337,336,340,339,',
'79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,216,,,,,,,41',
',,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'207,,,211,,,52,,,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66',
'67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84',
'86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,',
',,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,',
'61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,',
'288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,323,,332,330,329,,331,',
',,,,,,,,,,,,,,,285,,,282,,,52,,,54,,,,,,334,318,,,,,,,337,336,340,339',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,8,51,,,,57',
'58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7',
'41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,',
',,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,525,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27',
'89,88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82',
',38,39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,',
',79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58',
',,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,',
',,,288,,,93,92,,83,50,85,84,357,,87,94,95,,81,82,736,,332,330,329,735',
'331,,,,,,,,,,,,,,,,,358,,,211,,,52,,,54,,,,,,334,729,,,,,,,337,336,340',
'339,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,292,63,64,65,,51,,,',
'57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287,291,89,88,90,91,,,216',
',,,,,,288,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,,,,,,,,,,,,,,,,',
',,,,,,285,,,282,,,52,,,54,,,,,,,,,,,,,,,,,,,79,73,75,76,77,78,,,,74',
'80,,,,,,,56,,,53,,,292,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256',
'66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85',
'84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54',
',,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37',
'63,64,65,8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89',
'88,90,91,,,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38',
'39,,,,,,,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79',
'73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,8,51,,,,57,58,,',
',61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,7,41,',
'9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,',
'36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80',
',,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,23,24,66,67',
',,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50,85,84,86,,87',
'94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,,,,,40',
',,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65',
'8,51,,,,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91',
',,17,,,,,,7,41,,9,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,',
',,,,,,,,,,,,,,,,36,,,30,,,52,,,54,,32,,,,40,,,,,,,,18,,,,,79,73,75,76',
'77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60',
'62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255,256,66,67,,,,,,254,287',
'291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81',
'82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52,,,54,,415,,,,40,,,,,,,',
'215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,',
',,57,58,,,,61,,59,60,62,23,24,66,67,,,,,,22,28,27,89,88,90,91,,,17,',
',,,,,41,,,93,92,,83,50,85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,',
',,,,,,,,207,,,211,,,52,,,54,,,,,,40,,,,,,,,18,,,,,79,73,75,76,77,78',
',,,74,80,,,,,,,56,,,53,,,37,63,64,65,,51,,,,57,58,,,,61,,59,60,62,255',
'256,66,67,,,,,,254,287,291,89,88,90,91,,,216,,,,,,,41,,,93,92,,83,50',
'85,84,86,,87,94,95,,81,82,,38,39,,,,,,,,,,,,,,,,,,,,,207,,,211,,,52',
',,54,,,,,,40,,,,,,,,215,,,,,79,73,75,76,77,78,,,,74,80,,,,,,,56,,,53',
',,37,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188',
'189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170',
'169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,',
',,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145',
'191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190,177,160,159',
'154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178',
'163,151,170,169,182,183,184,185,186,150,157,148,149,146,147,,110,112',
',,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143',
'144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162,161,187,190',
'177,160,159,154,180,188,189,164,153,167,171,173,165,158,,,,174,181,176',
'175,168,178,163,151,170,169,182,183,184,185,186,150,157,148,149,146',
'147,,110,112,,,111,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179,152,172,162',
'161,187,190,177,160,159,154,180,188,189,164,153,167,171,173,165,158',
',,,174,181,176,175,168,178,163,151,170,169,182,183,184,185,186,150,157',
'148,149,146,147,,110,112,109,,111,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137',
'136,132,133,127,125,117,139,118,,,145,191,,,,,,,,,,80,155,166,156,179',
'152,172,162,161,187,190,177,160,159,154,180,188,189,164,153,167,171',
'173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183,184,185',
'186,150,157,148,149,146,147,,110,112,394,393,111,,395,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145,155,166',
'156,179,152,172,162,161,187,190,177,160,159,154,180,188,189,164,153',
'167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170,169,182,183',
'184,185,186,150,157,148,149,146,147,,110,112,394,393,111,,395,,,,,,',
'141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,',
',,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,,,145',
'155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188,189',
'164,153,167,171,173,165,158,,,,174,181,176,372,371,373,370,151,170,169',
'182,183,184,185,186,150,157,148,149,368,369,,366,112,85,84,367,,87,',
',,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,377,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
',,145,155,166,156,179,152,172,162,161,187,190,177,160,159,154,180,188',
'189,164,153,167,171,173,165,158,,,,174,181,176,175,168,178,163,151,170',
'169,182,183,184,185,186,150,157,148,149,146,147,,110,112,,,111,,,,,',
',,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,716',
'433,145,,717,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,919,427,145,,920,,,,,,,,,141,142,,138,120,121,122,129',
'126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,921,433,145,,922,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,721,433,145,',
'855,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,484,427,145,,485,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119',
'140,137,136,132,133,127,125,117,139,118,721,433,145,,719,,,,,,,,,141',
'142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,',
',,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,714,427,145',
',715,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133,127,125,117',
'139,118,626,427,145,,627,,,,,,,,,141,142,,138,120,121,122,129,126,128',
',,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136',
'132,133,127,125,117,139,118,484,427,145,,485,,,,,,,,,141,142,,138,120',
'121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135',
'134,,119,140,137,136,132,133,127,125,117,139,118,484,427,145,,485,,',
',,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130',
'131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118',
'626,427,145,,627,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123',
'124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132,133',
'127,125,117,139,118,628,433,145,,629,,,,,,,,,141,142,,138,120,121,122',
'129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140',
'137,136,132,133,127,125,117,139,118,628,433,145,,629,,,,,,,,,141,142',
',138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,,,,,',
',,135,134,,119,140,137,136,132,133,127,125,117,139,118,429,433,145,',
'431,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144',
'130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139',
'118,423,427,145,,424,,,,,,,,,141,142,,138,120,121,122,129,126,128,,',
'123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134,,119,140,137,136,132',
'133,127,125,117,139,118,669,427,145,,670,,,,,,,,,141,142,,138,120,121',
'122,129,126,128,,,123,124,,,,143,144,130,131,,,,,,264,,,,,,,135,134',
',119,140,137,136,132,133,127,125,117,139,118,672,433,145,,673,,,,,,',
',,141,142,,138,120,121,122,129,126,128,,,123,124,,,,143,144,130,131',
',,,,,,,,,,,,135,134,,119,140,137,136,132,133,127,125,117,139,118,484',
'427,145,,485,,,,,,,,,141,142,,138,120,121,122,129,126,128,,,123,124',
',,,143,144,130,131,,,,,,,,,,,,,135,134,,119,140,137,136,132,133,127',
'125,117,139,118,,,145' ]
        racc_action_table = arr = ::Array.new(23568, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'0,0,0,0,0,344,716,715,0,0,26,357,852,0,289,0,0,0,0,0,0,0,670,388,811',
'761,503,0,0,0,0,0,0,0,442,669,0,474,55,666,35,664,0,0,0,0,0,0,668,0',
'0,0,0,0,353,0,0,0,71,0,0,773,0,0,357,487,71,348,773,348,474,357,716',
'761,714,26,357,350,664,289,574,35,442,208,0,388,317,0,35,670,0,591,591',
'0,717,0,26,357,487,0,289,313,669,358,313,726,726,0,773,920,716,715,0',
'0,0,0,0,0,344,357,344,0,0,344,55,852,670,852,811,0,852,208,0,670,431',
'0,508,508,508,669,508,431,431,431,508,508,669,431,431,508,431,508,508',
'508,508,508,508,508,353,895,717,895,566,508,508,508,508,508,508,508',
'431,431,508,431,431,431,431,431,714,508,591,350,508,508,574,508,508',
'508,508,508,317,508,508,508,726,508,508,498,717,726,497,431,431,431',
'431,431,431,431,431,431,431,431,431,431,431,342,342,431,431,431,508',
'431,920,508,920,431,508,920,491,508,498,354,431,497,431,491,431,431',
'431,431,431,431,431,671,431,919,431,367,508,508,508,508,508,508,367',
'37,37,508,508,431,431,566,431,566,431,508,566,431,508,431,429,508,510',
'510,510,491,510,429,429,429,510,510,352,429,429,510,429,510,510,510',
'510,510,510,510,310,429,349,310,812,510,510,510,510,510,510,510,429',
'429,510,429,429,429,429,429,684,510,674,684,510,510,659,510,510,510',
'510,510,510,510,510,510,859,510,510,309,510,510,309,429,429,429,429',
'429,429,429,429,429,429,429,429,429,429,362,656,429,429,429,510,429',
'919,510,919,429,510,919,921,510,677,510,429,678,429,510,429,429,429',
'429,429,429,429,510,429,429,429,672,510,510,510,510,510,510,651,343',
'565,510,510,429,429,812,429,812,429,510,812,429,510,429,730,510,496',
'496,496,730,496,306,306,368,496,496,810,446,446,496,368,496,496,496',
'496,496,496,496,679,679,701,701,680,496,496,496,496,496,496,496,921',
'859,496,859,372,341,859,672,672,496,379,372,496,496,362,496,496,496',
'496,496,284,496,496,496,602,496,496,284,496,496,826,826,446,362,369',
'921,383,921,362,383,921,369,206,679,650,672,909,909,685,565,496,565',
'672,496,565,496,496,627,686,496,306,370,343,496,343,496,689,343,370',
'888,379,379,379,496,691,284,888,338,496,496,496,496,496,496,602,602',
'693,496,496,810,206,810,810,602,810,496,383,383,496,626,628,496,519',
'519,519,627,519,628,628,628,519,519,628,628,628,519,628,519,519,519',
'519,519,519,519,888,628,628,628,694,519,519,519,519,519,519,519,628',
'628,519,628,628,628,628,628,695,519,698,626,519,519,640,519,519,519',
'519,519,366,519,519,519,381,519,519,366,519,519,638,628,628,628,628',
'628,628,628,628,628,628,628,628,628,628,549,549,628,628,628,519,628',
'628,519,373,628,519,703,628,519,628,373,628,709,628,519,628,628,628',
'628,628,628,628,519,628,628,628,711,519,519,519,519,519,519,381,381',
'381,519,519,628,628,628,628,384,628,519,713,628,519,628,629,519,520',
'520,520,326,520,629,629,629,520,520,629,629,629,520,629,520,520,520',
'520,520,520,520,15,15,629,629,325,520,520,520,520,520,520,520,629,629',
'520,629,629,629,629,629,323,520,292,292,520,520,322,520,520,520,520',
'520,42,520,520,520,390,520,520,42,520,520,387,629,629,629,629,629,629',
'629,629,629,629,629,629,629,629,314,721,629,629,629,520,629,629,520',
'375,629,520,722,629,520,629,375,629,404,629,520,629,629,629,629,629',
'629,629,520,629,42,629,410,520,520,520,520,520,520,390,390,390,520,520',
'629,629,629,629,312,629,520,311,629,520,629,27,520,521,521,521,630,521',
'27,27,27,521,521,27,27,27,521,27,521,521,521,521,521,521,521,416,27',
'27,27,418,521,521,521,521,521,521,521,27,27,521,27,27,27,27,27,731,521',
'732,733,521,521,422,521,521,521,521,521,25,521,521,521,385,521,521,25',
'521,521,736,27,27,27,27,27,27,27,27,27,27,27,27,27,27,308,347,27,27',
'27,521,347,27,521,27,27,521,739,27,521,27,623,27,301,27,521,27,27,27',
'27,27,27,27,521,27,27,27,298,521,521,521,521,521,521,385,385,385,521',
'521,27,27,27,27,746,27,521,297,27,521,618,50,521,480,480,480,430,480',
'50,50,50,480,480,50,50,50,480,50,480,480,480,480,480,480,480,291,288',
'50,50,50,480,480,480,480,480,480,480,50,50,480,50,50,50,50,50,287,480',
'285,280,480,480,279,480,480,480,480,480,13,480,480,480,613,480,480,13',
'480,480,278,50,50,50,50,50,50,50,50,50,50,50,50,50,50,424,274,50,50',
'50,480,274,50,480,371,50,480,764,50,480,50,371,50,765,50,480,50,50,50',
'50,50,50,50,480,50,13,50,768,480,480,480,480,480,480,771,772,424,480',
'480,50,50,50,50,424,50,480,50,50,480,606,28,480,478,478,478,774,478',
'28,28,28,478,478,28,28,28,478,28,478,478,478,478,478,478,478,276,777',
'28,28,778,478,478,478,478,478,478,478,28,28,478,28,28,28,28,28,779,478',
'452,783,478,478,453,478,478,478,478,478,478,478,478,478,786,478,478',
'787,478,478,263,28,28,28,28,28,28,28,28,28,28,28,28,28,28,615,584,28',
'28,28,478,584,28,478,28,28,478,454,28,478,28,455,28,478,28,478,28,28',
'28,28,28,28,28,478,28,252,28,249,478,478,478,478,478,478,805,248,615',
'478,478,28,28,28,28,615,28,478,216,28,478,210,425,478,476,476,476,209',
'476,425,425,425,476,476,425,425,425,476,425,476,476,476,476,476,476',
'476,568,425,425,425,814,476,476,476,476,476,476,476,425,425,476,425',
'425,425,425,425,817,476,818,819,476,476,567,476,476,476,476,476,476',
'476,476,476,561,476,476,556,476,476,207,425,425,425,425,425,425,425',
'425,425,425,425,425,425,425,14,3,425,425,425,476,3,425,476,425,425,476',
'836,425,476,425,476,425,476,425,476,425,425,425,425,425,425,425,476',
'425,425,425,837,476,476,476,476,476,476,552,192,14,476,476,425,425,425',
'425,14,425,476,844,425,476,845,486,476,905,905,905,541,905,486,486,486',
'905,905,486,486,486,905,486,905,905,905,905,905,905,905,96,78,486,855',
'856,905,905,905,905,905,905,905,486,486,905,486,486,486,486,486,77,905',
'296,861,905,905,862,905,905,905,905,905,905,905,905,905,528,905,905',
'527,905,905,41,655,655,655,655,655,655,655,655,655,655,655,486,655,655',
'423,870,655,655,486,905,296,724,905,486,486,905,724,296,905,871,905',
'655,872,655,905,655,655,655,655,655,655,655,905,655,874,486,875,905',
'905,905,905,905,905,526,489,423,905,905,486,655,486,655,423,486,905',
'36,490,905,34,483,905,525,525,525,887,525,483,483,483,525,525,483,483',
'483,525,483,525,525,525,525,525,525,525,517,20,483,514,492,525,525,525',
'525,525,525,525,483,483,525,483,483,483,483,483,897,525,493,509,525',
'525,904,525,525,525,525,525,576,525,525,525,12,525,525,576,525,525,11',
'757,757,757,757,757,757,757,757,757,757,757,483,757,757,205,10,757,757',
'483,525,9,205,525,483,483,525,499,913,525,915,916,757,918,757,525,757',
'757,757,757,757,757,757,525,757,576,483,451,525,525,525,525,525,525',
'6,780,283,525,525,483,757,483,780,283,483,525,507,504,525,1,205,525',
'903,903,903,903,903,802,451,,903,903,451,451,,903,,903,903,903,903,903',
'903,903,5,5,5,5,5,903,903,903,903,903,903,903,,,903,908,780,283,,413',
'903,903,908,903,903,903,,903,903,903,903,903,885,903,903,903,,903,903',
'885,903,903,,413,413,413,413,413,413,413,413,413,413,413,886,413,413',
'286,,413,413,886,903,,286,903,,,903,,908,903,,903,413,,413,903,413,413',
'413,413,413,413,413,903,413,885,,450,903,903,903,903,903,903,299,,360',
'903,903,,413,299,413,360,,903,,886,903,,286,903,896,896,896,896,896',
',450,,896,896,450,450,,896,,896,896,896,896,896,896,896,275,275,275',
'275,275,896,896,896,896,896,896,896,,,896,299,,360,,631,896,896,,896',
'896,896,,896,896,896,896,896,351,896,896,896,,896,896,351,896,896,,631',
'631,631,631,631,631,631,631,631,631,631,513,631,631,673,,631,631,513',
'896,,673,896,,,896,673,,896,,896,631,,631,896,631,631,631,631,631,631',
'631,896,631,351,,,896,896,896,896,896,896,719,692,927,896,896,,631,719',
'692,927,,896,719,513,896,,673,896,17,17,17,,17,109,,,17,17,109,109,',
'17,,17,17,17,17,17,17,17,663,663,663,663,663,17,17,17,17,17,17,17,,',
'17,719,692,927,,,,17,,,17,17,,17,17,17,17,17,,17,17,17,,17,17,,17,17',
',473,473,473,473,473,473,473,473,473,473,473,,473,473,922,,473,473,',
'17,,922,17,17,,17,922,,17,,,473,,473,17,473,473,473,473,473,473,473',
'17,473,,,,17,17,17,17,17,17,,,,17,17,,473,473,,796,,17,,,17,,922,17',
'18,18,18,,18,,740,740,18,18,740,740,740,18,,18,18,18,18,18,18,18,,,',
',,18,18,18,18,18,18,18,,,18,796,796,796,796,,,18,,,18,18,,18,18,18,18',
'18,,18,18,18,,18,18,,18,18,,762,762,762,762,762,762,762,762,762,762',
'762,,762,762,823,,762,762,,18,,,18,,,18,,,18,,,762,,762,18,762,762,762',
'762,762,762,762,18,762,,,,18,18,18,18,18,18,,,,18,18,,762,823,823,823',
'823,18,,,18,,,18,531,531,531,469,531,,,,531,531,,,,531,,531,531,531',
'531,531,531,531,,,,,,531,531,531,531,531,531,531,469,,531,,469,469,469',
'469,,531,,,531,531,,531,531,531,531,531,531,531,531,531,,531,531,,531',
'531,,524,524,524,524,524,524,524,524,524,524,524,,524,524,899,,524,524',
',531,,,531,,,531,,,531,,531,524,,524,531,524,524,524,524,524,524,524',
'531,524,,,,531,531,531,531,531,531,,,,531,531,,524,899,899,899,899,531',
',,531,,,531,891,891,891,891,891,,,,891,891,,,,891,,891,891,891,891,891',
'891,891,,,,,,891,891,891,891,891,891,891,,801,891,801,801,801,,801,891',
'891,,891,891,891,,891,891,891,891,891,,891,891,891,,891,891,,891,891',
',839,839,839,839,839,839,839,839,839,839,839,,839,839,543,,839,839,',
'891,,,891,,,891,,,891,,891,839,,839,891,839,839,839,839,839,839,839',
'891,839,,,,891,891,891,891,891,891,,,,891,891,,839,543,543,543,543,891',
',,891,,,891,22,22,22,470,22,,,,22,22,,,,22,,22,22,22,22,22,22,22,,,',
',,22,22,22,22,22,22,22,470,,22,,470,470,470,470,,22,,,22,22,,22,22,22',
'22,22,22,22,22,22,,22,22,,22,22,,421,421,421,421,421,421,421,421,421',
'421,421,,421,421,,,421,421,,22,,,22,,,22,,,22,,22,421,22,421,22,421',
'421,421,421,421,421,421,22,421,,,,22,22,22,22,22,22,,,,22,22,,421,,',
',,22,,,22,,,22,23,23,23,,23,,,,23,23,,,,23,,23,23,23,23,23,23,23,,,',
',,23,23,23,23,23,23,23,,557,23,557,557,557,,557,,23,,,23,23,,23,23,23',
'23,23,23,23,23,23,,23,23,,23,23,,755,755,755,755,755,755,755,755,755',
'755,755,,755,755,,,755,755,,23,,,23,,,23,,,23,,23,755,23,755,23,755',
'755,755,755,755,755,755,23,755,,,,23,23,23,23,23,23,,,,23,23,,755,,',
',,23,,,23,,,23,24,24,24,,24,,,,24,24,,,,24,,24,24,24,24,24,24,24,,,',
',,24,24,24,24,24,24,24,,,24,,,,,,,24,,,24,24,,24,24,24,24,24,24,24,24',
'24,,24,24,,24,24,,752,752,752,752,752,752,752,752,752,752,752,,752,752',
',,752,752,,24,,,24,,,24,,,24,,24,752,24,752,24,752,752,752,752,752,752',
'752,24,752,,,,24,24,24,24,24,24,,,,24,24,,752,,,,,24,,,24,,,24,534,534',
'534,,534,,,,534,534,,,,534,,534,534,534,534,534,534,534,,,,,,534,534',
'534,534,534,534,534,,,534,,,,,,,534,,,534,534,,534,534,534,534,534,534',
'534,534,534,,534,534,,534,534,,19,19,19,19,19,19,19,19,19,19,19,,19',
'19,,,19,19,,534,,,534,,,534,,,534,,,19,,19,534,19,19,19,19,19,19,19',
'534,19,,,,534,534,534,534,534,534,,,,534,534,,19,,,,,534,,,534,,,534',
'539,539,539,539,539,,,,539,539,,,,539,,539,539,539,539,539,539,539,',
',,,,539,539,539,539,539,539,539,,,539,,,,,,539,539,,539,539,539,,539',
'539,539,539,539,,539,539,539,,539,539,,539,539,,436,436,436,436,436',
'436,436,436,436,436,436,,436,436,,,436,436,,539,,,539,,,539,,,539,,539',
'436,,436,539,436,436,436,436,436,436,436,539,436,,,,539,539,539,539',
'539,539,,,,539,539,,436,,,,,539,,,539,,,539,540,540,540,540,540,,,,540',
'540,,,,540,,540,540,540,540,540,540,540,,,,,,540,540,540,540,540,540',
'540,,,540,,,,,,540,540,,540,540,540,,540,540,540,540,540,,540,540,540',
',540,540,,540,540,,750,750,750,750,750,750,750,750,750,750,750,,750',
'750,,,750,750,,540,,,540,,,540,,,540,,540,750,,750,540,750,750,750,750',
'750,750,750,540,750,,,,540,540,540,540,540,540,,,,540,540,,750,,,,,540',
',,540,,,540,546,546,546,,546,,,,546,546,,,,546,,546,546,546,546,546',
'546,546,,,,,,546,546,546,546,546,546,546,,,546,,,,,,,546,,,546,546,',
'546,546,546,546,546,,546,546,546,,546,546,745,745,745,745,745,745,745',
'745,745,745,745,458,745,745,,,745,745,,,,,,546,,,546,458,458,546,,745',
'546,745,,745,745,745,745,745,745,745,458,745,,,458,458,458,458,,546',
'546,546,546,546,546,,,745,546,546,,699,,699,699,699,546,699,,546,,,546',
'30,30,30,30,30,,,,30,30,,,,30,,30,30,30,30,30,30,30,,,,,699,30,30,30',
'30,30,30,30,699,,30,,,,,,30,30,,30,30,30,,30,30,30,30,30,,30,30,30,',
'30,30,,30,30,,676,676,676,676,676,676,676,676,676,676,676,,676,676,',
',676,676,,30,,,30,,,30,,,30,,30,676,,676,30,676,676,676,676,676,676',
'676,30,676,,,,30,30,30,30,30,30,,,,30,30,,676,,,,,30,,,30,,,30,31,31',
'31,,31,,,,31,31,,,,31,,31,31,31,31,31,31,31,,,,,,31,31,31,31,31,31,31',
',,31,,,,,,,31,,,31,31,,31,31,31,31,31,,31,31,31,,31,31,246,246,246,246',
'246,246,246,246,246,246,246,457,246,246,,,246,246,,,,,,31,,,31,457,457',
'31,,246,31,246,31,246,246,246,246,246,246,246,457,246,457,,457,457,457',
'457,,31,31,31,31,31,31,,,246,31,31,,554,,554,554,554,31,554,,31,,,31',
'32,32,32,,32,,,,32,32,,,,32,,32,32,32,32,32,32,32,,,,,554,32,32,32,32',
'32,32,32,554,334,32,334,334,334,,334,,32,,,32,32,,32,32,32,32,32,,32',
'32,32,,32,32,635,,635,635,635,,635,,,,,,334,,,,,,,,334,,,32,,,32,,,32',
',,32,,,,,,635,,,,,,,,635,635,635,635,,32,32,32,32,32,32,635,,,32,32',
',,,32,,,32,,,32,,,32,560,560,560,560,560,,,,560,560,,,,560,,560,560',
'560,560,560,560,560,,,,,,560,560,560,560,560,560,560,,,560,,,,,,560',
'560,,560,560,560,,560,560,560,560,560,,560,560,560,,560,560,,560,560',
',449,449,449,449,449,449,449,449,449,449,449,,449,449,,,449,449,,560',
',,560,,,560,,,560,,560,449,,449,560,449,449,449,449,449,449,449,560',
'449,,,,560,560,560,560,560,560,,,,560,560,,,,,,,560,,,560,,,560,564',
'564,564,564,564,,,,564,564,,,,564,,564,564,564,564,564,564,564,,,,,',
'564,564,564,564,564,564,564,,,564,,,,,,564,564,,564,564,564,,564,564',
'564,564,564,,564,564,564,,564,564,,564,564,,461,,,,,,,,,,,,,,,,461,461',
',564,,,564,,,564,,,564,,564,461,,461,564,461,461,461,461,,,461,564,461',
',,,564,564,564,564,564,564,,,,564,564,,,,,,,564,,,564,,,564,884,884',
'884,884,884,,,,884,884,,,,884,,884,884,884,884,884,884,884,,,,,,884',
'884,884,884,884,884,884,,,884,,,,,,884,884,,884,884,884,,884,884,884',
'884,884,,884,884,884,,884,884,,884,884,,466,466,466,466,466,466,466',
',,466,466,,,,,,466,466,,884,,,884,,,884,,,884,,884,466,,466,884,466',
'466,466,466,466,466,466,884,466,,,,884,884,884,884,884,884,,,,884,884',
',,,,,,884,,,884,,,884,882,882,882,,882,,,,882,882,,,,882,,882,882,882',
'882,882,882,882,,,,,,882,882,882,882,882,882,882,,,882,,,,,,,882,,,882',
'882,,882,882,882,882,882,,882,882,882,,882,882,,882,882,,460,,,,,,,',
',,,,,,,,460,460,,882,,,882,,,882,,,882,,882,460,882,460,882,460,460',
'460,460,,,460,882,460,,,,882,882,882,882,882,882,,,,882,882,,,,,,,882',
',,882,,,882,38,38,38,,38,,,,38,38,,,,38,,38,38,38,38,38,38,38,,,,,,38',
'38,38,38,38,38,38,,,38,,,,,,,38,,,38,38,,38,38,38,38,38,,38,38,38,,38',
'38,,38,38,,459,459,459,459,459,459,459,,,459,459,,,,,,459,459,,38,,',
'38,,,38,,,38,,,459,,459,38,459,459,459,459,459,459,459,38,459,,,,38',
'38,38,38,38,38,,,,38,38,,,,,,,38,,,38,,,38,39,39,39,,39,,,,39,39,,,',
'39,,39,39,39,39,39,39,39,,,,,,39,39,39,39,39,39,39,,,39,,,,,,,39,,,39',
'39,,39,39,39,39,39,,39,39,39,,39,39,,39,39,,471,471,471,471,471,471',
'471,,,471,471,,,,,,471,471,,39,,,39,,,39,,,39,,,471,,471,39,471,471',
'471,471,471,471,471,39,471,,,,39,39,39,39,39,39,,,,39,39,,,,,,,39,,',
'39,,,39,40,40,40,,40,,,,40,40,,,,40,,40,40,40,40,40,40,40,,,,,,40,40',
'40,40,40,40,40,,,40,,,,,,,40,,,40,40,,40,40,40,40,40,,40,40,40,,40,40',
',40,40,,465,465,465,465,465,465,465,,,465,465,,,,,,465,465,,40,,,40',
',,40,,,40,,,465,,465,40,465,465,465,465,465,465,465,40,465,,,,40,40',
'40,40,40,40,,,,40,40,,,,,,,40,,,40,,,40,867,867,867,867,867,,,,867,867',
',,,867,,867,867,867,867,867,867,867,,,,,,867,867,867,867,867,867,867',
',,867,,,,,,867,867,,867,867,867,,867,867,867,867,867,,867,867,867,,867',
'867,,867,867,,448,448,448,448,448,448,448,448,448,448,448,,448,448,',
',448,448,,867,,,867,,,867,,,867,,867,448,,448,867,448,448,448,448,448',
'448,448,867,448,,,,867,867,867,867,867,867,,,,867,867,,,,,,,867,,,867',
',,867,569,569,569,569,569,,,,569,569,,,,569,,569,569,569,569,569,569',
'569,,,,,,569,569,569,569,569,569,569,,,569,,,,,,569,569,,569,569,569',
',569,569,569,569,569,,569,569,569,,569,569,,569,569,,464,464,464,464',
'464,464,464,,,464,464,,,,,,464,464,,569,,,569,,,569,,,569,,569,464,',
'464,569,464,464,464,464,464,464,464,569,464,,,,569,569,569,569,569,569',
',,,569,569,,,,,,,569,,,569,,,569,571,571,571,,571,,,,571,571,,,,571',
',571,571,571,571,571,571,571,,,,,,571,571,571,571,571,571,571,,,571',
',,,,,,571,,,571,571,,571,571,571,571,571,571,571,571,571,,571,571,,571',
'571,,463,,,,,,,,,,,,,,,,463,463,,571,,,571,,,571,,,571,,571,463,,463',
'571,463,463,463,463,,,463,571,463,,,,571,571,571,571,571,571,,,,571',
'571,,,,,,,571,,,571,,,571,52,52,52,,52,,,,52,52,,,,52,,52,52,52,52,52',
'52,52,,,,,,52,52,52,52,52,52,52,,,52,,,,,,,52,,,52,52,,52,52,52,52,52',
',52,52,52,,52,52,,52,52,,462,,,,,,,,,,,,,,,,462,462,,52,,,52,,,52,,',
'52,,,462,,462,52,462,462,462,462,,,462,52,462,,,,52,52,52,52,52,52,',
',,52,52,,,,,,,52,,,52,,,52,53,53,53,,53,,,,53,53,,,,53,,53,53,53,53',
'53,53,53,,,,,,53,53,53,53,53,53,53,,,53,,,,,,,53,,,53,53,,53,53,53,53',
'53,53,53,53,53,,53,53,,53,53,,467,467,467,467,467,467,467,,,467,467',
',,,,,467,467,,53,,,53,,,53,,,53,,53,467,,467,53,467,467,467,467,467',
'467,467,53,467,,,,53,53,53,53,53,53,,,,53,53,,,,,,,53,,,53,,,53,54,54',
'54,,54,,,,54,54,,,,54,,54,54,54,54,54,54,54,,,,,,54,54,54,54,54,54,54',
',,54,,,,,,,54,,,54,54,,54,54,54,54,54,54,54,54,54,,54,54,,54,54,,472',
'472,472,472,472,472,472,472,,472,472,,,,,,472,472,,54,,,54,,,54,,,54',
',,472,,472,54,472,472,472,472,472,472,472,54,472,,,,54,54,54,54,54,54',
',,,54,54,,,,,,,54,,,54,,,54,579,579,579,,579,,,,579,579,,,,579,,579',
'579,579,579,579,579,579,,,,,,579,579,579,579,579,579,579,,,579,,,,,',
',579,,,579,579,,579,579,579,579,579,579,579,579,579,,579,579,,579,579',
',468,468,468,468,468,468,468,,,468,468,,,,,,468,468,,579,,,579,,,579',
',,579,,579,468,,468,579,468,468,468,468,468,468,468,579,468,,,,579,579',
'579,579,579,579,,,,579,579,,,,,,,579,,,579,,,579,864,864,864,864,864',
',,,864,864,,,,864,,864,864,864,864,864,864,864,,,,,,864,864,864,864',
'864,864,864,,,864,,,,,,864,864,,864,864,864,,864,864,864,864,864,,864',
'864,864,,864,864,,864,864,,456,,,,,,,,,,,,,,,,456,456,,864,,,864,,,864',
',,864,,864,456,,456,864,456,456,456,456,,,,864,,,,,864,864,864,864,864',
'864,,,,864,864,,,,,,,864,,,864,,,864,57,57,57,,57,,,,57,57,,,,57,,57',
'57,57,57,57,57,57,,,,,,57,57,57,57,57,57,57,,,57,,,,,,,57,,,57,57,,57',
'57,57,57,57,,57,57,57,,57,57,,57,57,,,,,,,,,,,,,,,,,,,,,57,,,57,,,57',
',,57,,,,,,57,,,,,,,,57,,,,,57,57,57,57,57,57,,,,57,57,,,,,,,57,,,57',
',,57,58,58,58,,58,,,,58,58,,,,58,,58,58,58,58,58,58,58,,,,,,58,58,58',
'58,58,58,58,,,58,,,,,,,58,,,58,58,,58,58,58,58,58,,58,58,58,,58,58,',
'58,58,,,,,,,,,,,,,,,,,,,,,58,,,58,,,58,,,58,,,,,,58,,,,,,,,58,,,,,58',
'58,58,58,58,58,,,,58,58,,,,,,,58,,,58,,,58,61,61,61,,61,,,,61,61,,,',
'61,,61,61,61,61,61,61,61,,,,,,61,61,61,61,61,61,61,,,61,,,,,,,61,,,61',
'61,,61,61,61,61,61,,61,61,61,,61,61,,61,61,,,,,,,,,,,,,,,,,,,,,61,,',
'61,,,61,,,61,,,,,,61,,,,,,,,61,,,,,61,61,61,61,61,61,,,,61,61,61,,,',
',61,61,,,61,,,61,62,62,62,,62,,,,62,62,,,,62,,62,62,62,62,62,62,62,',
',,,,62,62,62,62,62,62,62,,,62,,,,,,,62,,,62,62,,62,62,62,62,62,,62,62',
'62,,62,62,821,,821,821,821,,821,,,,,,,,,,,,,,,,,62,,,62,,,62,,,62,,62',
',,,821,,,,,,,,821,821,821,821,,62,62,62,62,62,62,,,,62,62,,,,,,,62,',
',62,,,62,63,63,63,,63,,,,63,63,,,,63,,63,63,63,63,63,63,63,,,,,,63,63',
'63,63,63,63,63,,,63,,,,,,,63,,,63,63,,63,63,63,63,63,,63,63,63,,63,63',
'318,,318,318,318,,318,,,,,,,,,,,,,,63,,,63,,,63,,,63,,,63,,,,,,318,',
'318,,,,,,318,318,318,318,,63,63,63,63,63,63,,,,63,63,,,,,,,63,,,63,',
',63,583,583,583,,583,,,,583,583,,,,583,,583,583,583,583,583,583,583',
',,,,,583,583,583,583,583,583,583,,,583,,,,,,,583,,,583,583,,583,583',
'583,583,583,,583,583,583,,583,583,,583,583,,,,,,,,,,,,,,,,,,,,,583,',
',583,,,583,,,583,,,,,,583,,,,,,,,583,,,,,583,583,583,583,583,583,,,',
'583,583,,,,,,,583,,,583,,,583,863,863,863,,863,,,,863,863,,,,863,,863',
'863,863,863,863,863,863,,,,,,863,863,863,863,863,863,863,,,863,,,,,',
',863,,,863,863,,863,863,863,863,863,,863,863,863,,863,863,,863,863,',
',,,,,,,,,,,,,,,,,,,863,,,863,,,863,,,863,,863,,,,863,,,,,,,,863,,,,',
'863,863,863,863,863,863,,,,863,863,,,,,,,863,,,863,,,863,585,585,585',
',585,,,,585,585,,,,585,,585,585,585,585,585,585,585,,,,,,585,585,585',
'585,585,585,585,,,585,,,,,,,585,,,585,585,,585,585,585,585,585,,585',
'585,585,,585,585,,585,585,,,,,,,,,,,,,,,,,,,,,585,,,585,,,585,,,585',
',,,,,585,,,,,,,,585,,,,,585,585,585,585,585,585,,,,585,585,,,,,,,585',
',,585,,,585,853,853,853,,853,,,,853,853,,,,853,,853,853,853,853,853',
'853,853,,,,,,853,853,853,853,853,853,853,,,853,,,,,,,853,,,853,853,',
'853,853,853,853,853,,853,853,853,,853,853,587,,587,587,587,587,587,',
',,,,,,,,,,,,,,,853,,,853,,,853,,,853,,,,,,587,587,,,,,,,587,587,587',
'587,,853,853,853,853,853,853,,,,853,853,,,,,,,853,,,853,,,853,612,612',
'612,,612,,,,612,612,,,,612,,612,612,612,612,612,612,612,,,,,,612,612',
'612,612,612,612,612,,,612,,,,,,,612,,,612,612,,612,612,612,612,612,',
'612,612,612,,612,612,,612,612,,,,,,,,,,,,,,,,,,,,,612,,,612,,,612,,',
'612,,,,,,612,,,,,,,,612,,,,,612,612,612,612,612,612,,,,612,612,,,,,',
',612,,,612,,,612,83,83,83,,83,,,,83,83,,,,83,,83,83,83,83,83,83,83,',
'83,,,,83,83,83,83,83,83,83,,,83,,,,,,,83,,,83,83,,83,83,83,83,83,83',
'83,83,83,,83,83,,83,83,,,,,,,,,,,,,,,,,,,,,83,,,83,83,,83,,,83,,83,',
'83,,83,,,,,,,,83,,83,,,83,83,83,83,83,83,,,,83,83,,,,,,,83,,,83,,,83',
'86,86,86,,86,,,,86,86,,,,86,,86,86,86,86,86,86,86,,86,,,,86,86,86,86',
'86,86,86,,,86,,,,,,,86,,,86,86,,86,86,86,86,86,86,86,86,86,,86,86,,86',
'86,,,,,,,,,,,,,,,,,,,,,86,,,86,86,,86,,,86,,86,,86,,86,,,,,,,,86,,86',
',,86,86,86,86,86,86,,,,86,86,,,,,,,86,,,86,,,86,445,445,445,,445,,,',
'445,445,,,,445,,445,445,445,445,445,445,445,,,,,,445,445,445,445,445',
'445,445,,,445,,,,,,,445,,,445,445,,445,445,445,445,445,,445,445,445',
',445,445,,445,445,,,,,,,,,,,,,,,,,,,,,445,,,445,,,445,,,445,,,,,,445',
',,,,,,,445,,,,,445,445,445,445,445,445,,,,445,445,,,,,,,445,,,445,,',
'445,98,98,98,98,98,,,,98,98,,,,98,,98,98,98,98,98,98,98,,,,,,98,98,98',
'98,98,98,98,,,98,,,,,,98,98,98,98,98,98,,98,98,98,98,98,,98,98,98,,98',
'98,,98,98,,,,,,,,,,,,,,,,,,,,,98,,,98,,,98,,,98,,98,,,,98,,,,,,,,98',
',,,,98,98,98,98,98,98,,,,98,98,,,,,,98,98,,,98,,,98,102,102,102,,102',
',,,102,102,,,,102,,102,102,102,102,102,102,102,,,,,,102,102,102,102',
'102,102,102,,,102,,,,,,,102,,,102,102,,102,102,102,102,102,,102,102',
'102,,102,102,,102,102,,,,,,,,,,,,,,,,,,,,,102,,,102,,,102,,,102,,,,',
',102,,,,,,,,102,,,,,102,102,102,102,102,102,,,,102,102,,,,,,,102,,,102',
',,102,103,103,103,,103,,,,103,103,,,,103,,103,103,103,103,103,103,103',
',,,,,103,103,103,103,103,103,103,,,103,,,,,,,103,,,103,103,,103,103',
'103,103,103,,103,103,103,,103,103,,103,103,,,,,,,,,,,,,,,,,,,,,103,',
',103,,,103,,,103,,,,,,103,,,,,,,,103,,,,,103,103,103,103,103,103,,,',
'103,103,,,,,,,103,,,103,,,103,104,104,104,,104,,,,104,104,,,,104,,104',
'104,104,104,104,104,104,,,,,,104,104,104,104,104,104,104,,,104,,,,,',
',104,,,104,104,,104,104,104,104,104,,104,104,104,,104,104,,104,104,',
',,,,,,,,,,,,,,,,,,,104,,,104,,,104,,,104,,,,,,104,,,,,,,,104,,,,,104',
'104,104,104,104,104,,,,104,104,,,,,,,104,,,104,,,104,105,105,105,,105',
',,,105,105,,,,105,,105,105,105,105,105,105,105,,,,,,105,105,105,105',
'105,105,105,,,105,,,,,,,105,,,105,105,,105,105,105,105,105,,105,105',
'105,,105,105,,105,105,,,,,,,,,,,,,,,,,,,,,105,,,105,,,105,,,105,,,,',
',105,,,,,,,,105,,,,,105,105,105,105,105,105,,,,105,105,,,,,,,105,,,105',
',,105,106,106,106,106,106,,,,106,106,,,,106,,106,106,106,106,106,106',
'106,,,,,,106,106,106,106,106,106,106,,,106,,,,,,106,106,,106,106,106',
',106,106,106,106,106,,106,106,106,,106,106,,106,106,,,,,,,,,,,,,,,,',
',,,,106,,,106,,,106,,,106,,106,,,,106,,,,,,,,106,,,,,106,106,106,106',
'106,106,,,,106,106,,,,,,,106,,,106,,,106,107,107,107,107,107,,,,107',
'107,,,,107,,107,107,107,107,107,107,107,,,,,,107,107,107,107,107,107',
'107,,,107,,,,,,107,107,107,107,107,107,,107,107,107,107,107,,107,107',
'107,,107,107,,107,107,,,,,,,,,,,,,,,,,,,,,107,,,107,,,107,,,107,,107',
',,,107,,,,,,,,107,,,,,107,107,107,107,107,107,,,,107,107,,,,,,,107,',
',107,,,107,849,849,849,849,849,,,,849,849,,,,849,,849,849,849,849,849',
'849,849,,,,,,849,849,849,849,849,849,849,,,849,,,,,,849,849,,849,849',
'849,,849,849,849,849,849,,849,849,849,,849,849,,849,849,,,,,,,,,,,,',
',,,,,,,,849,,,849,,,849,,,849,,849,,,,849,,,,,,,,849,,,,,849,849,849',
'849,849,849,,,,849,849,,,,,,,849,,,849,,,849,444,444,444,,444,,,,444',
'444,,,,444,,444,444,444,444,444,444,444,,,,,,444,444,444,444,444,444',
'444,,,444,,,,,,,444,,,444,444,,444,444,444,444,444,,444,444,444,,444',
'444,,444,444,,,,,,,,,,,,,,,,,,,,,444,,,444,,,444,,,444,,,,,,444,,,,',
',,,444,,,,,444,444,444,444,444,444,,,,444,444,,,,,,,444,,,444,,,444',
'840,840,840,,840,,,,840,840,,,,840,,840,840,840,840,840,840,840,,,,',
',840,840,840,840,840,840,840,,,840,,,,,,,840,,,840,840,,840,840,840',
'840,840,,840,840,840,,840,840,,840,840,,,,,,,,,,,,,,,,,,,,,840,,,840',
',,840,,,840,,,,,,840,,,,,,,,840,,,,,840,840,840,840,840,840,,,,840,840',
',,,,,,840,,,840,,,840,194,194,194,194,194,,,,194,194,,,,194,,194,194',
'194,194,194,194,194,,,,,,194,194,194,194,194,194,194,,,194,,,,,,194',
'194,,194,194,194,,194,194,194,194,194,,194,194,194,,194,194,,194,194',
',,,,,,,,,,,,,,,,,,,,194,,,194,,,194,,,194,,194,,,,194,,,,,,,,194,,,',
',194,194,194,194,194,194,,,,194,194,,,,,,,194,,,194,,,194,195,195,195',
',195,,,,195,195,,,,195,,195,195,195,195,195,195,195,,,,,,195,195,195',
'195,195,195,195,,,195,,,,,,,195,,,195,195,,195,195,195,195,195,,195',
'195,195,,195,195,,195,195,,,,,,,,,,,,,,,,,,,,,195,,,195,,,195,,,195',
',195,,,,195,,,,,,,,195,,,,,195,195,195,195,195,195,,,,195,195,,,,,,',
'195,,,195,,,195,196,196,196,,196,,,,196,196,,,,196,,196,196,196,196',
'196,196,196,,,,,,196,196,196,196,196,196,196,,,196,,,,,,,196,,,196,196',
',196,196,196,196,196,,196,196,196,,196,196,,196,196,,,,,,,,,,,,,,,,',
',,,,196,,,196,,,196,,,196,,196,,,,196,,,,,,,,196,,,,,196,196,196,196',
'196,196,,,,196,196,,,,,,,196,,,196,,,196,197,197,197,,197,,,,197,197',
',,,197,,197,197,197,197,197,197,197,,,,,,197,197,197,197,197,197,197',
',,197,,,,,,,197,,,197,197,,197,197,197,197,197,,197,197,197,,197,197',
',197,197,,,,,,,,,,,,,,,,,,,,,197,,,197,,,197,,,197,,,,,,197,,,,,,,,197',
',,,,197,197,197,197,197,197,,,,197,197,,,,,,,197,,,197,,,197,198,198',
'198,,198,,,,198,198,,,,198,,198,198,198,198,198,198,198,,,,,,198,198',
'198,198,198,198,198,,,198,,,,,,,198,,,198,198,,198,198,198,198,198,198',
'198,198,198,,198,198,,198,198,,,,,,,,,,,,,,,,,,,,,198,,,198,,,198,,',
'198,,198,,,,198,,,,,,,,198,,,,,198,198,198,198,198,198,,,,198,198,,',
',,,,198,,,198,,,198,443,443,443,,443,,,,443,443,,,,443,,443,443,443',
'443,443,443,443,,,,,,443,443,443,443,443,443,443,,,443,,,,,,,443,,,443',
'443,,443,443,443,443,443,,443,443,443,,443,443,,443,443,,,,,,,,,,,,',
',,,,,,,,443,,,443,,,443,,,443,,,,,,443,,,,,,,,443,,,,,443,443,443,443',
'443,443,,,,443,443,,,,,,,443,,,443,,,443,614,614,614,,614,,,,614,614',
',,,614,,614,614,614,614,614,614,614,,,,,,614,614,614,614,614,614,614',
',,614,,,,,,,614,,,614,614,,614,614,614,614,614,,614,614,614,,614,614',
',614,614,,,,,,,,,,,,,,,,,,,,,614,,,614,,,614,,,614,,614,,,,614,,,,,',
',,614,,,,,614,614,614,614,614,614,,,,614,614,,,,,,,614,,,614,,,614,201',
'201,201,,201,,,,201,201,,,,201,,201,201,201,201,201,201,201,,,,,,201',
'201,201,201,201,201,201,,,201,,,,,,,201,,,201,201,,201,201,201,201,201',
',201,201,201,,201,201,,201,201,,,,,,,,,,,,,,,,,,,,,201,,,201,,,201,',
',201,,,,,,201,,,,,,,,201,,,,,201,201,201,201,201,201,,,,201,201,,,,',
',,201,,,201,,,201,202,202,202,,202,,,,202,202,,,,202,,202,202,202,202',
'202,202,202,,,,,,202,202,202,202,202,202,202,,,202,,,,,,,202,,,202,202',
',202,202,202,202,202,,202,202,202,,202,202,,202,202,,,,,,,,,,,,,,,,',
',,,,202,,,202,,,202,,,202,,,,,,202,,,,,,,,202,,,,,202,202,202,202,202',
'202,,,,202,202,,,,,,,202,,,202,,,202,203,203,203,,203,,,,203,203,,,',
'203,,203,203,203,203,203,203,203,,,,,,203,203,203,203,203,203,203,,',
'203,,,,,,,203,,,203,203,,203,203,203,203,203,,203,203,203,,203,203,',
'203,203,,,,,,,,,,,,,,,,,,,,,203,,,203,,,203,,,203,,,,,,203,,,,,,,,203',
',,,,203,203,203,203,203,203,,,,203,203,,,,,,,203,,,203,,,203,441,441',
'441,,441,,,,441,441,,,,441,,441,441,441,441,441,441,441,,,,,,441,441',
'441,441,441,441,441,,,441,,,,,,,441,,,441,441,,441,441,441,441,441,441',
'441,441,441,,441,441,,441,441,,,,,,,,,,,,,,,,,,,,,441,,,441,,,441,,',
'441,,441,,,,441,,,,,,,,441,,,,,441,441,441,441,441,441,,,,441,441,,',
',,,,441,,,441,,,441,434,434,434,,434,,,,434,434,,,,434,,434,434,434',
'434,434,434,434,,,,,,434,434,434,434,434,434,434,,,434,,,,,,,434,,,434',
'434,,434,434,434,434,434,434,434,434,434,,434,434,,434,434,,,,,,,,,',
',,,,,,,,,,,434,,,434,434,,434,,,434,,434,,434,,434,,,,,,,,434,,,,,434',
'434,434,434,434,434,,,,434,434,,,,,,,434,,,434,,,434,828,828,828,,828',
',,,828,828,,,,828,,828,828,828,828,828,828,828,,,,,,828,828,828,828',
'828,828,828,,,828,,,,,,,828,,,828,828,,828,828,828,828,828,,828,828',
'828,,828,828,,828,828,,,,,,,,,,,,,,,,,,,,,828,,,828,,,828,,,828,,,,',
',828,,,,,,,,828,,,,,828,828,828,828,828,828,,,,828,828,,,,,,,828,,,828',
',,828,433,433,433,,433,,,,433,433,,,,433,,433,433,433,433,433,433,433',
',,,,,433,433,433,433,433,433,433,,,433,,,,,,,433,,,433,433,,433,433',
'433,433,433,433,433,433,433,,433,433,,433,433,,,,,,,,,,,,,,,,,,,,,433',
',,433,433,,433,,,433,,433,,433,,433,,,,,,,,433,,,,,433,433,433,433,433',
'433,,,,433,433,,,,,,,433,,,433,,,433,616,616,616,,616,,,,616,616,,,',
'616,,616,616,616,616,616,616,616,,,,,,616,616,616,616,616,616,616,,',
'616,,,,,,,616,,,616,616,,616,616,616,616,616,,616,616,616,,616,616,',
'616,616,,,,,,,,,,,,,,,,,,,,,616,,,616,,,616,,,616,,,,,,616,,,,,,,,616',
',,,,616,616,616,616,616,616,,,,616,616,,,,,,,616,,,616,,,616,211,211',
'211,211,211,,,,211,211,,,,211,,211,211,211,211,211,211,211,,,,,,211',
'211,211,211,211,211,211,,,211,,,,,,211,211,,211,211,211,,211,211,211',
'211,211,,211,211,211,,211,211,,211,211,,,,,,,,,,,,,,,,,,,,,211,,,211',
',,211,,,211,,211,,,,211,,,,,,,,211,,,,,211,211,211,211,211,211,,,,211',
'211,,,,,,,211,,,211,,,211,212,212,212,,212,,,,212,212,,,,212,,212,212',
'212,212,212,212,212,,,,,,212,212,212,212,212,212,212,,,212,,,,,,,212',
',,212,212,,212,212,212,212,212,,212,212,212,,212,212,,212,212,,,,,,',
',,,,,,,,,,,,,,212,,,212,,212,212,,,212,,,,,,212,,,,,,,,212,,,,,212,212',
'212,212,212,212,,,,212,212,,,,,,,212,,,212,,,212,215,215,215,,215,,',
',215,215,,,,215,,215,215,215,215,215,215,215,,,,,,215,215,215,215,215',
'215,215,,,215,,,,,,,215,,,215,215,,215,215,215,215,215,,215,215,215',
',215,215,,215,215,,,,,,,,,,,,,,,,,,,,,215,,,215,,,215,,,215,,,,,,215',
',,,,,,,215,,,,,215,215,215,215,215,215,,,,215,215,,,,,,,215,,,215,,',
'215,807,807,807,807,807,,,,807,807,,,,807,,807,807,807,807,807,807,807',
',,,,,807,807,807,807,807,807,807,,,807,,,,,,807,807,,807,807,807,,807',
'807,807,807,807,,807,807,807,,807,807,,807,807,,,,,,,,,,,,,,,,,,,,,807',
',,807,,,807,,,807,,807,,,,807,,,,,,,,807,,,,,807,807,807,807,807,807',
',,,807,807,,,,,,,807,,,807,,,807,217,217,217,,217,,,,217,217,,,,217',
',217,217,217,217,217,217,217,,,,,,217,217,217,217,217,217,217,,,217',
',,,,,,217,,,217,217,,217,217,217,217,217,,217,217,217,,217,217,,217',
'217,,,,,,,,,,,,,,,,,,,,,217,,,217,,,217,,,217,,,,,,217,,,,,,,,217,,',
',,217,217,217,217,217,217,,,,217,217,,,,,,,217,,,217,,,217,218,218,218',
',218,,,,218,218,,,,218,,218,218,218,218,218,218,218,,,,,,218,218,218',
'218,218,218,218,,,218,,,,,,,218,,,218,218,,218,218,218,218,218,,218',
'218,218,,218,218,,218,218,,,,,,,,,,,,,,,,,,,,,218,,,218,,,218,,,218',
',,,,,218,,,,,,,,218,,,,,218,218,218,218,218,218,,,,218,218,,,,,,,218',
',,218,,,218,219,219,219,,219,,,,219,219,,,,219,,219,219,219,219,219',
'219,219,,,,,,219,219,219,219,219,219,219,,,219,,,,,,,219,,,219,219,',
'219,219,219,219,219,,219,219,219,,219,219,,219,219,,,,,,,,,,,,,,,,,',
',,,219,,,219,,,219,,,219,,,,,,219,,,,,,,,219,,,,,219,219,219,219,219',
'219,,,,219,219,,,,,,,219,,,219,,,219,220,220,220,,220,,,,220,220,,,',
'220,,220,220,220,220,220,220,220,,,,,,220,220,220,220,220,220,220,,',
'220,,,,,,,220,,,220,220,,220,220,220,220,220,,220,220,220,,220,220,',
'220,220,,,,,,,,,,,,,,,,,,,,,220,,,220,,,220,,,220,,,,,,220,,,,,,,,220',
',,,,220,220,220,220,220,220,,,,220,220,,,,,,,220,,,220,,,220,221,221',
'221,,221,,,,221,221,,,,221,,221,221,221,221,221,221,221,,,,,,221,221',
'221,221,221,221,221,,,221,,,,,,,221,,,221,221,,221,221,221,221,221,',
'221,221,221,,221,221,,221,221,,,,,,,,,,,,,,,,,,,,,221,,,221,,,221,,',
'221,,,,,,221,,,,,,,,221,,,,,221,221,221,221,221,221,,,,221,221,,,,,',
',221,,,221,,,221,222,222,222,,222,,,,222,222,,,,222,,222,222,222,222',
'222,222,222,,,,,,222,222,222,222,222,222,222,,,222,,,,,,,222,,,222,222',
',222,222,222,222,222,,222,222,222,,222,222,,222,222,,,,,,,,,,,,,,,,',
',,,,222,,,222,,,222,,,222,,,,,,222,,,,,,,,222,,,,,222,222,222,222,222',
'222,,,,222,222,,,,,,,222,,,222,,,222,223,223,223,,223,,,,223,223,,,',
'223,,223,223,223,223,223,223,223,,,,,,223,223,223,223,223,223,223,,',
'223,,,,,,,223,,,223,223,,223,223,223,223,223,,223,223,223,,223,223,',
'223,223,,,,,,,,,,,,,,,,,,,,,223,,,223,,,223,,,223,,,,,,223,,,,,,,,223',
',,,,223,223,223,223,223,223,,,,223,223,,,,,,,223,,,223,,,223,224,224',
'224,,224,,,,224,224,,,,224,,224,224,224,224,224,224,224,,,,,,224,224',
'224,224,224,224,224,,,224,,,,,,,224,,,224,224,,224,224,224,224,224,',
'224,224,224,,224,224,,224,224,,,,,,,,,,,,,,,,,,,,,224,,,224,,,224,,',
'224,,,,,,224,,,,,,,,224,,,,,224,224,224,224,224,224,,,,224,224,,,,,',
',224,,,224,,,224,225,225,225,,225,,,,225,225,,,,225,,225,225,225,225',
'225,225,225,,,,,,225,225,225,225,225,225,225,,,225,,,,,,,225,,,225,225',
',225,225,225,225,225,,225,225,225,,225,225,,225,225,,,,,,,,,,,,,,,,',
',,,,225,,,225,,,225,,,225,,,,,,225,,,,,,,,225,,,,,225,225,225,225,225',
'225,,,,225,225,,,,,,,225,,,225,,,225,226,226,226,,226,,,,226,226,,,',
'226,,226,226,226,226,226,226,226,,,,,,226,226,226,226,226,226,226,,',
'226,,,,,,,226,,,226,226,,226,226,226,226,226,,226,226,226,,226,226,',
'226,226,,,,,,,,,,,,,,,,,,,,,226,,,226,,,226,,,226,,,,,,226,,,,,,,,226',
',,,,226,226,226,226,226,226,,,,226,226,,,,,,,226,,,226,,,226,227,227',
'227,,227,,,,227,227,,,,227,,227,227,227,227,227,227,227,,,,,,227,227',
'227,227,227,227,227,,,227,,,,,,,227,,,227,227,,227,227,227,227,227,',
'227,227,227,,227,227,,227,227,,,,,,,,,,,,,,,,,,,,,227,,,227,,,227,,',
'227,,,,,,227,,,,,,,,227,,,,,227,227,227,227,227,227,,,,227,227,,,,,',
',227,,,227,,,227,228,228,228,,228,,,,228,228,,,,228,,228,228,228,228',
'228,228,228,,,,,,228,228,228,228,228,228,228,,,228,,,,,,,228,,,228,228',
',228,228,228,228,228,,228,228,228,,228,228,,228,228,,,,,,,,,,,,,,,,',
',,,,228,,,228,,,228,,,228,,,,,,228,,,,,,,,228,,,,,228,228,228,228,228',
'228,,,,228,228,,,,,,,228,,,228,,,228,229,229,229,,229,,,,229,229,,,',
'229,,229,229,229,229,229,229,229,,,,,,229,229,229,229,229,229,229,,',
'229,,,,,,,229,,,229,229,,229,229,229,229,229,,229,229,229,,229,229,',
'229,229,,,,,,,,,,,,,,,,,,,,,229,,,229,,,229,,,229,,,,,,229,,,,,,,,229',
',,,,229,229,229,229,229,229,,,,229,229,,,,,,,229,,,229,,,229,230,230',
'230,,230,,,,230,230,,,,230,,230,230,230,230,230,230,230,,,,,,230,230',
'230,230,230,230,230,,,230,,,,,,,230,,,230,230,,230,230,230,230,230,',
'230,230,230,,230,230,,230,230,,,,,,,,,,,,,,,,,,,,,230,,,230,,,230,,',
'230,,,,,,230,,,,,,,,230,,,,,230,230,230,230,230,230,,,,230,230,,,,,',
',230,,,230,,,230,231,231,231,,231,,,,231,231,,,,231,,231,231,231,231',
'231,231,231,,,,,,231,231,231,231,231,231,231,,,231,,,,,,,231,,,231,231',
',231,231,231,231,231,,231,231,231,,231,231,,231,231,,,,,,,,,,,,,,,,',
',,,,231,,,231,,,231,,,231,,,,,,231,,,,,,,,231,,,,,231,231,231,231,231',
'231,,,,231,231,,,,,,,231,,,231,,,231,232,232,232,,232,,,,232,232,,,',
'232,,232,232,232,232,232,232,232,,,,,,232,232,232,232,232,232,232,,',
'232,,,,,,,232,,,232,232,,232,232,232,232,232,,232,232,232,,232,232,',
'232,232,,,,,,,,,,,,,,,,,,,,,232,,,232,,,232,,,232,,,,,,232,,,,,,,,232',
',,,,232,232,232,232,232,232,,,,232,232,,,,,,,232,,,232,,,232,712,712',
'712,,712,,,,712,712,,,,712,,712,712,712,712,712,712,712,,,,,,712,712',
'712,712,712,712,712,,,712,,,,,,,712,,,712,712,,712,712,712,712,712,',
'712,712,712,,712,712,,712,712,,,,,,,,,,,,,,,,,,,,,712,,,712,,,712,,',
'712,,712,,,,712,,,,,,,,712,,,,,712,712,712,712,712,712,,,,712,712,,',
',,,,712,,,712,,,712,234,234,234,,234,,,,234,234,,,,234,,234,234,234',
'234,234,234,234,,,,,,234,234,234,234,234,234,234,,,234,,,,,,,234,,,234',
'234,,234,234,234,234,234,,234,234,234,,234,234,,234,234,,,,,,,,,,,,',
',,,,,,,,234,,,234,,,234,,,234,,,,,,234,,,,,,,,234,,,,,234,234,234,234',
'234,234,,,,234,234,,,,,,,234,,,234,,,234,235,235,235,,235,,,,235,235',
',,,235,,235,235,235,235,235,235,235,,,,,,235,235,235,235,235,235,235',
',,235,,,,,,,235,,,235,235,,235,235,235,235,235,,235,235,235,,235,235',
',235,235,,,,,,,,,,,,,,,,,,,,,235,,,235,,,235,,,235,,,,,,235,,,,,,,,235',
',,,,235,235,235,235,235,235,,,,235,235,,,,,,,235,,,235,,,235,236,236',
'236,,236,,,,236,236,,,,236,,236,236,236,236,236,236,236,,,,,,236,236',
'236,236,236,236,236,,,236,,,,,,,236,,,236,236,,236,236,236,236,236,',
'236,236,236,,236,236,,236,236,,,,,,,,,,,,,,,,,,,,,236,,,236,,,236,,',
'236,,,,,,236,,,,,,,,236,,,,,236,236,236,236,236,236,,,,236,236,,,,,',
',236,,,236,,,236,237,237,237,,237,,,,237,237,,,,237,,237,237,237,237',
'237,237,237,,,,,,237,237,237,237,237,237,237,,,237,,,,,,,237,,,237,237',
',237,237,237,237,237,,237,237,237,,237,237,,237,237,,,,,,,,,,,,,,,,',
',,,,237,,,237,,,237,,,237,,,,,,237,,,,,,,,237,,,,,237,237,237,237,237',
'237,,,,237,237,,,,,,,237,,,237,,,237,238,238,238,,238,,,,238,238,,,',
'238,,238,238,238,238,238,238,238,,,,,,238,238,238,238,238,238,238,,',
'238,,,,,,,238,,,238,238,,238,238,238,238,238,,238,238,238,,238,238,',
'238,238,,,,,,,,,,,,,,,,,,,,,238,,,238,,,238,,,238,,,,,,238,,,,,,,,238',
',,,,238,238,238,238,238,238,,,,238,238,,,,,,,238,,,238,,,238,239,239',
'239,,239,,,,239,239,,,,239,,239,239,239,239,239,239,239,,,,,,239,239',
'239,239,239,239,239,,,239,,,,,,,239,,,239,239,,239,239,239,239,239,',
'239,239,239,,239,239,,239,239,,,,,,,,,,,,,,,,,,,,,239,,,239,,,239,,',
'239,,,,,,239,,,,,,,,239,,,,,239,239,239,239,239,239,,,,239,239,,,,,',
',239,,,239,,,239,240,240,240,,240,,,,240,240,,,,240,,240,240,240,240',
'240,240,240,,,,,,240,240,240,240,240,240,240,,,240,,,,,,,240,,,240,240',
',240,240,240,240,240,,240,240,240,,240,240,,240,240,,,,,,,,,,,,,,,,',
',,,,240,,,240,,,240,,,240,,,,,,240,,,,,,,,240,,,,,240,240,240,240,240',
'240,,,,240,240,,,,,,,240,,,240,,,240,241,241,241,,241,,,,241,241,,,',
'241,,241,241,241,241,241,241,241,,,,,,241,241,241,241,241,241,241,,',
'241,,,,,,,241,,,241,241,,241,241,241,241,241,,241,241,241,,241,241,',
'241,241,,,,,,,,,,,,,,,,,,,,,241,,,241,,,241,,,241,,,,,,241,,,,,,,,241',
',,,,241,241,241,241,241,241,,,,241,241,,,,,,,241,,,241,,,241,242,242',
'242,,242,,,,242,242,,,,242,,242,242,242,242,242,242,242,,,,,,242,242',
'242,242,242,242,242,,,242,,,,,,,242,,,242,242,,242,242,242,242,242,',
'242,242,242,,242,242,,242,242,,,,,,,,,,,,,,,,,,,,,242,,,242,,,242,,',
'242,,,,,,242,,,,,,,,242,,,,,242,242,242,242,242,242,,,,242,242,,,,,',
',242,,,242,,,242,806,806,806,806,806,,,,806,806,,,,806,,806,806,806',
'806,806,806,806,,,,,,806,806,806,806,806,806,806,,,806,,,,,,806,806',
',806,806,806,,806,806,806,806,806,,806,806,806,,806,806,,806,806,,,',
',,,,,,,,,,,,,,,,,806,,,806,,,806,,,806,,806,,,,806,,,,,,,,806,,,,,806',
'806,806,806,806,806,,,,806,806,,,,,,,806,,,806,,,806,804,804,804,,804',
',,,804,804,,,,804,,804,804,804,804,804,804,804,,,,,,804,804,804,804',
'804,804,804,,,804,,,,,,,804,,,804,804,,804,804,804,804,804,,804,804',
'804,,804,804,,804,804,,,,,,,,,,,,,,,,,,,,,804,,,804,,,804,,,804,,,,',
',804,,,,,,,,804,,,,,804,804,804,804,804,804,,,,804,804,,,,,,,804,,,804',
',,804,251,251,251,,251,,,,251,251,,,,251,,251,251,251,251,251,251,251',
',,,,,251,251,251,251,251,251,251,,,251,,,,,,,251,,,251,251,,251,251',
'251,251,251,,251,251,251,,251,251,,251,251,,,,,,,,,,,,,,,,,,,,,251,',
',251,,,251,,,251,,,,,,251,,,,,,,,251,,,,,251,251,251,251,251,251,,,',
'251,251,,,,,,,251,,,251,,,251,502,502,502,502,502,,,,502,502,,,,502',
',502,502,502,502,502,502,502,,,,,,502,502,502,502,502,502,502,,,502',
',,,,,502,502,,502,502,502,,502,502,502,502,502,,502,502,502,,502,502',
',502,502,,,,,,,,,,,,,,,,,,,,,502,,,502,,,502,,,502,,502,,,,502,,,,,',
',,502,,,,,502,502,502,502,502,502,,,,502,502,,,,,,502,502,,,502,,,502',
'253,253,253,,253,,,,253,253,,,,253,,253,253,253,253,253,253,253,,,,',
',253,253,253,253,253,253,253,,,253,,,,,,,253,,,253,253,,253,253,253',
'253,253,,253,253,253,,253,253,,253,253,,,,,,,,,,,,,,,,,,,,,253,,,253',
',,253,,,253,,,,,,253,,,,,,,,253,,,,,253,253,253,253,253,253,,,,253,253',
',,,,,,253,,,253,,,253,258,258,258,,258,,,,258,258,,,,258,,258,258,258',
'258,258,258,258,,,,,,258,258,258,258,258,258,258,,,258,,,,,,,258,,,258',
'258,,258,258,258,258,258,,258,258,258,,258,258,,258,258,,,,,,,,,,,,',
',,,,,,,,258,,,258,,,258,,,258,,,,,,258,,,,,,,,258,,,,,258,258,258,258',
'258,258,,,,258,258,,,,,,,258,,,258,,,258,617,617,617,,617,,,,617,617',
',,,617,,617,617,617,617,617,617,617,,,,,,617,617,617,617,617,617,617',
',,617,,,,,,,617,,,617,617,,617,617,617,617,617,,617,617,617,,617,617',
',617,617,,,,,,,,,,,,,,,,,,,,,617,,,617,,,617,,,617,,,,,,617,,,,,,,,617',
',,,,617,617,617,617,617,617,,,,617,617,,,,,,,617,,,617,,,617,622,622',
'622,,622,,,,622,622,,,,622,,622,622,622,622,622,622,622,,,,,,622,622',
'622,622,622,622,622,,,622,,,,,,,622,,,622,622,,622,622,622,622,622,',
'622,622,622,,622,622,,622,622,,,,,,,,,,,,,,,,,,,,,622,,,622,,,622,,',
'622,,,,,,622,,,,,,,,622,,,,,622,622,622,622,622,622,,,,622,622,,,,,',
',622,,,622,,,622,625,625,625,,625,,,,625,625,,,,625,,625,625,625,625',
'625,625,625,,,,,,625,625,625,625,625,625,625,,,625,,,,,,,625,,,625,625',
',625,625,625,625,625,,625,625,625,,625,625,,625,625,,,,,,,,,,,,,,,,',
',,,,625,,,625,,,625,,,625,,,,,,625,,,,,,,,625,,,,,625,625,625,625,625',
'625,,,,625,625,,,,,,,625,,,625,,,625,264,264,264,,264,,,,264,264,,,',
'264,,264,264,264,264,264,264,264,,,,,,264,264,264,264,264,264,264,,',
'264,,,,,,,264,,,264,264,,264,264,264,264,264,264,264,264,264,,264,264',
',264,264,,,,,,,,,,,,,,,,,,,,,264,,,264,,,264,,,264,,264,,264,,264,,',
',,,,,264,,,,,264,264,264,264,264,264,,,,264,264,,,,,,,264,,,264,,,264',
'265,265,265,,265,,,,265,265,,,,265,,265,265,265,265,265,265,265,,,,',
',265,265,265,265,265,265,265,,,265,,,,,,,265,,,265,265,,265,265,265',
'265,265,265,265,265,265,,265,265,,265,265,,,,,,,,,,,,,,,,,,,,,265,,',
'265,,,265,,,265,,265,,265,,265,,,,,,,,265,,,,,265,265,265,265,265,265',
',,,265,265,,,,,,,265,,,265,,,265,273,273,273,,273,,,,273,273,,,,273',
',273,273,273,273,273,273,273,,,,,,273,273,273,273,273,273,273,,,273',
',,,,,,273,,,273,273,,273,273,273,273,273,273,273,273,273,,273,273,,273',
'273,,,,,,,,,,,,,,,,,,,,,273,,,273,,273,273,,,273,,273,,273,,273,,,,',
',,,273,,,,,273,273,273,273,273,273,,,,273,273,,,,,,,273,,,273,,,273',
'785,785,785,785,785,,,,785,785,,,,785,,785,785,785,785,785,785,785,',
',,,,785,785,785,785,785,785,785,,,785,,,,,,785,785,,785,785,785,,785',
'785,785,785,785,,785,785,785,,785,785,,785,785,,,,,,,,,,,,,,,,,,,,,785',
',,785,,,785,,,785,,785,,,,785,,,,,,,,785,,,,,785,785,785,785,785,785',
',,,785,785,,,,,,,785,,,785,,,785,775,775,775,,775,,,,775,775,,,,775',
',775,775,775,775,775,775,775,,,,,,775,775,775,775,775,775,775,,,775',
',,,,,,775,,,775,775,,775,775,775,775,775,,775,775,775,,775,775,,775',
'775,,,,,,,,,,,,,,,,,,,,,775,,,775,,,775,,,775,,775,,,,775,,,,,,,,775',
',,,,775,775,775,775,775,775,,,,775,775,,,,,,,775,,,775,,,775,277,277',
'277,277,277,,,,277,277,,,,277,,277,277,277,277,277,277,277,,,,,,277',
'277,277,277,277,277,277,,,277,,,,,,277,277,,277,277,277,,277,277,277',
'277,277,,277,277,277,,277,277,,277,277,,,,,,,,,,,,,,,,,,,,,277,,,277',
',,277,,,277,,277,,,,277,,,,,,,,277,,,,,277,277,277,277,277,277,,,,277',
'277,,,,,,,277,,,277,,,277,760,760,760,,760,,,,760,760,,,,760,,760,760',
'760,760,760,760,760,,,,,,760,760,760,760,760,760,760,,,760,,,,,,,760',
',,760,760,,760,760,760,760,760,,760,760,760,,760,760,,760,760,,,,,,',
',,,,,,,,,,,,,,760,,,760,,,760,,,760,,,,,,760,,,,,,,,760,,,,,760,760',
'760,760,760,760,,,,760,760,,,,,,,760,,,760,,,760,759,759,759,,759,,',
',759,759,,,,759,,759,759,759,759,759,759,759,,,,,,759,759,759,759,759',
'759,759,,,759,,,,,,,759,,,759,759,,759,759,759,759,759,,759,759,759',
',759,759,,759,759,,,,,,,,,,,,,,,,,,,,,759,,,759,,,759,,,759,,,,,,759',
',,,,,,,759,,,,,759,759,759,759,759,759,,,,759,759,,,,,,,759,,,759,,',
'759,281,281,281,,281,,,,281,281,,,,281,,281,281,281,281,281,281,281',
',,,,,281,281,281,281,281,281,281,,,281,,,,,,,281,,,281,281,,281,281',
'281,281,281,,281,281,281,,281,281,729,,729,729,729,729,729,,,,,,,,,',
',,,,,,,281,,,281,,,281,,,281,,,,,,729,,,,,,,,729,729,729,729,,281,281',
'281,281,281,281,,,,281,281,,,,281,,,281,,,281,,,281,282,282,282,282',
'282,,,,282,282,,,,282,,282,282,282,282,282,282,282,,,,,,282,282,282',
'282,282,282,282,,,282,,,,,,282,282,,282,282,282,,282,282,282,282,282',
',282,282,282,,282,282,,282,282,,,,,,,,,,,,,,,,,,,,,282,,,282,,,282,',
',282,,282,,,,282,,,,,,,,282,,,,,282,282,282,282,282,282,,,,282,282,',
',,,,,282,,,282,,,282,415,415,415,,415,,,,415,415,,,,415,,415,415,415',
'415,415,415,415,,,,,,415,415,415,415,415,415,415,,,415,,,,,,,415,,,415',
'415,,415,415,415,415,415,,415,415,415,,415,415,,415,415,,,,,,,,,,,,',
',,,,,,,,415,,,415,,,415,,,415,,,,,,415,,,,,,,,415,,,,,415,415,415,415',
'415,415,,,,415,415,,,,,,,415,,,415,,,415,633,633,633,,633,,,,633,633',
',,,633,,633,633,633,633,633,633,633,,,,,,633,633,633,633,633,633,633',
',,633,,,,,,,633,,,633,633,,633,633,633,633,633,,633,633,633,,633,633',
',633,633,,,,,,,,,,,,,,,,,,,,,633,,,633,,,633,,,633,,,,,,633,,,,,,,,633',
',,,,633,633,633,633,633,633,,,,633,633,,,,,,,633,,,633,,,633,758,758',
'758,,758,,,,758,758,,,,758,,758,758,758,758,758,758,758,,,,,,758,758',
'758,758,758,758,758,,,758,,,,,,,758,,,758,758,,758,758,758,758,758,',
'758,758,758,,758,758,,758,758,,,,,,,,,,,,,,,,,,,,,758,,,758,,,758,,',
'758,,,,,,758,,,,,,,,758,,,,,758,758,758,758,758,758,,,,758,758,,,,,',
',758,,,758,,,758,637,637,637,637,637,,,,637,637,,,,637,,637,637,637',
'637,637,637,637,,,,,,637,637,637,637,637,637,637,,,637,,,,,,637,637',
',637,637,637,,637,637,637,637,637,,637,637,637,,637,637,,637,637,,,',
',,,,,,,,,,,,,,,,,637,,,637,,,637,,,637,,637,,,,637,,,,,,,,637,,,,,637',
'637,637,637,637,637,,,,637,637,,,,,,,637,,,637,,,637,377,377,377,,377',
',,,377,377,,,,377,,377,377,377,377,377,377,377,,,,,,377,377,377,377',
'377,377,377,,,377,,,,,,,377,,,377,377,,377,377,377,377,377,,377,377',
'377,,377,377,,377,377,,,,,,,,,,,,,,,,,,,,,377,,,377,,,377,,,377,,,,',
',377,,,,,,,,377,,,,,377,377,377,377,377,377,,,,377,377,,,,,,,377,,,377',
',,377,641,641,641,,641,,,,641,641,,,,641,,641,641,641,641,641,641,641',
',,,,,641,641,641,641,641,641,641,,,641,,,,,,,641,,,641,641,,641,641',
'641,641,641,,641,641,641,,641,641,,641,641,,,,,,,,,,,,,,,,,,,,,641,',
',641,,,641,,,641,,,,,,641,,,,,,,,641,,,,,641,641,641,641,641,641,,,',
'641,641,,,,,,,641,,,641,,,641,648,648,648,648,648,,,,648,648,,,,648',
',648,648,648,648,648,648,648,,,,,,648,648,648,648,648,648,648,,,648',
',,,,,648,648,,648,648,648,,648,648,648,648,648,,648,648,648,,648,648',
',648,648,,,,,,,,,,,,,,,,,,,,,648,,,648,,,648,,,648,,648,,,,648,,,,,',
',,648,,,,,648,648,648,648,648,648,,,,648,648,,,,,,,648,,,648,,,648,654',
'654,654,,654,,,,654,654,,,,654,,654,654,654,654,654,654,654,,,,,,654',
'654,654,654,654,654,654,,,654,,,,,,,654,,,654,654,,654,654,654,654,654',
'654,654,654,654,,654,654,,654,654,,,,,,,,,,,,,,,,,,,,,654,,,654,,,654',
',,654,,654,,654,,654,,,,,,,,654,,,,,654,654,654,654,654,654,,,,654,654',
',,,,,,654,,,654,,,654,660,660,660,660,660,,,,660,660,,,,660,,660,660',
'660,660,660,660,660,,,,,,660,660,660,660,660,660,660,,,660,,,,,,660',
'660,,660,660,660,,660,660,660,660,660,,660,660,660,,660,660,,660,660',
',,,,,,,,,,,,,,,,,,,,660,,,660,,,660,,,660,,660,,,,660,,,,,,,,660,,,',
',660,660,660,660,660,660,,,,660,660,,,,,,,660,,,660,,,660,294,294,294',
',294,,,,294,294,,,,294,,294,294,294,294,294,294,294,,,,,,294,294,294',
'294,294,294,294,,,294,,,,,,,294,,,294,294,,294,294,294,294,294,,294',
'294,294,,294,294,547,,547,547,547,,547,,,,,,,,,,,,,,,,,294,,,294,,,294',
',,294,,,,,,547,,,,,,,,547,547,547,547,,294,294,294,294,294,294,,,,294',
'294,,,,,,,294,,,294,,,294,748,748,748,,748,,,,748,748,,,,748,,748,748',
'748,748,748,748,748,,,,,,748,748,748,748,748,748,748,,,748,,,,,,,748',
',,748,748,,748,748,748,748,748,,748,748,748,,748,748,,748,748,,,,,,',
',,,,,,,,,,,,,,748,,,748,,,748,,,748,,,,,,748,,,,,,,,748,,,,,748,748',
'748,748,748,748,,,,748,748,,,,,,,748,,,748,,,748,747,747,747,,747,,',
',747,747,,,,747,,747,747,747,747,747,747,747,,,,,,747,747,747,747,747',
'747,747,,,747,,,,,,,747,,,747,747,,747,747,747,747,747,,747,747,747',
',747,747,,747,747,,,,,,,,,,,,,,,,,,,,,747,,,747,,,747,,,747,,,,,,747',
',,,,,,,747,,,,,747,747,747,747,747,747,,,,747,747,,,,,,,747,,,747,,',
'747,661,661,661,661,661,,,,661,661,,,,661,,661,661,661,661,661,661,661',
',,,,,661,661,661,661,661,661,661,,,661,,,,,,661,661,,661,661,661,,661',
'661,661,661,661,,661,661,661,,661,661,,661,661,,,,,,,,,,,,,,,,,,,,,661',
',,661,,,661,,,661,,661,,,,661,,,,,,,,661,,,,,661,661,661,661,661,661',
',,,661,661,,,,,,,661,,,661,,,661,665,665,665,,665,,,,665,665,,,,665',
',665,665,665,665,665,665,665,,,,,,665,665,665,665,665,665,665,,,665',
',,,,,,665,,,665,665,,665,665,665,665,665,,665,665,665,,665,665,56,,56',
'56,56,,56,,,,,,,,,,,,,,,,,665,,,665,,,665,,,665,,,,,,56,56,,,,,,,56',
'56,56,56,,665,665,665,665,665,665,,,,665,665,,,,,,,665,,,665,,,665,741',
'741,741,741,741,,,,741,741,,,,741,,741,741,741,741,741,741,741,,,,,',
'741,741,741,741,741,741,741,,,741,,,,,,741,741,,741,741,741,,741,741',
'741,741,741,,741,741,741,,741,741,,741,741,,,,,,,,,,,,,,,,,,,,,741,',
',741,,,741,,,741,,741,,,,741,,,,,,,,741,,,,,741,741,741,741,741,741',
',,,741,741,,,,,,,741,,,741,,,741,303,303,303,,303,,,,303,303,,,,303',
',303,303,303,303,303,303,303,,,,,,303,303,303,303,303,303,303,,,303',
',,,,,,303,,,303,303,,303,303,303,303,303,,303,303,303,,303,303,,303',
'303,,,,,,,,,,,,,,,,,,,,,303,,,303,303,,303,,,303,,,,,,303,,,,,,,,303',
',,,,303,303,303,303,303,303,,,,303,303,,,,,,,303,,,303,,,303,305,305',
'305,305,305,,,,305,305,,,,305,,305,305,305,305,305,305,305,,,,,,305',
'305,305,305,305,305,305,,,305,,,,,,305,305,,305,305,305,,305,305,305',
'305,305,,305,305,305,,305,305,,305,305,,,,,,,,,,,,,,,,,,,,,305,,,305',
',,305,,,305,,305,,,,305,,,,,,,,305,,,,,305,305,305,305,305,305,,,,305',
'305,,,,,,,305,,,305,,,305,365,365,365,,365,,,,365,365,,,,365,,365,365',
'365,365,365,365,365,,,,,,365,365,365,365,365,365,365,,,365,,,,,,,365',
',,365,365,,365,365,365,365,365,,365,365,365,,365,365,878,,878,878,878',
'878,878,,,,,,,,,,,,,,,,,365,,,365,,,365,,,365,,,,,,878,878,,,,,,,878',
'878,878,878,,365,365,365,365,365,365,,,,365,365,,,,,,,365,,,365,,,365',
'675,675,675,,675,,,,675,675,,,,675,,675,675,675,675,675,675,675,,,,',
',675,675,675,675,675,675,675,,,675,,,,,,,675,,,675,675,,675,675,675',
'675,675,,675,675,675,,675,675,,,,,,,,,,,,,,,,,,,,,,,,675,,,675,,,675',
',,675,,,,,,,,,,,,,,,,,,,675,675,675,675,675,675,,,,675,675,,,,,,,675',
',,675,,,675,735,735,735,,735,,,,735,735,,,,735,,735,735,735,735,735',
'735,735,,,,,,735,735,735,735,735,735,735,,,735,,,,,,,735,,,735,735,',
'735,735,735,735,735,,735,735,735,,735,735,,735,735,,,,,,,,,,,,,,,,,',
',,,735,,,735,,,735,,,735,,,,,,735,,,,,,,,735,,,,,735,735,735,735,735',
'735,,,,735,735,,,,,,,735,,,735,,,735,728,728,728,728,728,,,,728,728',
',,,728,,728,728,728,728,728,728,728,,,,,,728,728,728,728,728,728,728',
',,728,,,,,,728,728,,728,728,728,,728,728,728,728,728,,728,728,728,,728',
'728,,728,728,,,,,,,,,,,,,,,,,,,,,728,,,728,,,728,,,728,,728,,,,728,',
',,,,,,728,,,,,728,728,728,728,728,728,,,,728,728,,,,,,,728,,,728,,,728',
'727,727,727,727,727,,,,727,727,,,,727,,727,727,727,727,727,727,727,',
',,,,727,727,727,727,727,727,727,,,727,,,,,,727,727,,727,727,727,,727',
'727,727,727,727,,727,727,727,,727,727,,727,727,,,,,,,,,,,,,,,,,,,,,727',
',,727,,,727,,,727,,727,,,,727,,,,,,,,727,,,,,727,727,727,727,727,727',
',,,727,727,,,,,,,727,,,727,,,727,346,346,346,,346,,,,346,346,,,,346',
',346,346,346,346,346,346,346,,,,,,346,346,346,346,346,346,346,,,346',
',,,,,,346,,,346,346,,346,346,346,346,346,,346,346,346,,346,346,,346',
'346,,,,,,,,,,,,,,,,,,,,,346,,,346,,,346,,,346,,,,,,346,,,,,,,,346,,',
',,346,346,346,346,346,346,,,,346,346,,,,,,,346,,,346,,,346,723,723,723',
'723,723,,,,723,723,,,,723,,723,723,723,723,723,723,723,,,,,,723,723',
'723,723,723,723,723,,,723,,,,,,723,723,,723,723,723,,723,723,723,723',
'723,,723,723,723,,723,723,,723,723,,,,,,,,,,,,,,,,,,,,,723,,,723,,,723',
',,723,,723,,,,723,,,,,,,,723,,,,,723,723,723,723,723,723,,,,723,723',
',,,,,,723,,,723,,,723,345,345,345,,345,,,,345,345,,,,345,,345,345,345',
'345,345,345,345,,,,,,345,345,345,345,345,345,345,,,345,,,,,,,345,,,345',
'345,,345,345,345,345,345,,345,345,345,,345,345,,345,345,,,,,,,,,,,,',
',,,,,,,,345,,,345,,,345,,,345,,,,,,345,,,,,,,,345,,,,,345,345,345,345',
'345,345,,,,345,345,,,,,,,345,,,345,,,345,681,681,681,,681,,,,681,681',
',,,681,,681,681,681,681,681,681,681,,,,,,681,681,681,681,681,681,681',
',,681,,,,,,,681,,,681,681,,681,681,681,681,681,,681,681,681,,681,681',
',681,681,,,,,,,,,,,,,,,,,,,,,681,,,681,,,681,,,681,,681,,,,681,,,,,',
',,681,,,,,681,681,681,681,681,681,,,,681,681,,,,,,,681,,,681,,,681,718',
'718,718,,718,,,,718,718,,,,718,,718,718,718,718,718,718,718,,,,,,718',
'718,718,718,718,718,718,,,718,,,,,,,718,,,718,718,,718,718,718,718,718',
',718,718,718,,718,718,,718,718,,,,,,,,,,,,,,,,,,,,,718,,,718,,,718,',
',718,,,,,,718,,,,,,,,718,,,,,718,718,718,718,718,718,,,,718,718,,,,',
',,718,,,718,,,718,233,233,233,,233,,,,233,233,,,,233,,233,233,233,233',
'233,233,233,,,,,,233,233,233,233,233,233,233,,,233,,,,,,,233,,,233,233',
',233,233,233,233,233,,233,233,233,,233,233,,233,233,,,,,,,,,,,,,,,,',
',,,,233,,,233,,,233,,,233,,,,,,233,,,,,,,,233,,,,,233,233,233,233,233',
'233,,,,233,233,,,,,,,233,,,233,,,233,409,409,409,409,409,409,409,409',
'409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,,,,409',
'409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409,409',
'409,409,409,,409,409,,,409,,,,,,,,,409,409,,409,409,409,409,409,409',
'409,,,409,409,,,,409,409,409,409,,,,,,,,,,,,,409,409,,409,409,409,409',
'409,409,409,409,409,409,409,,,409,409,,,,,,,,,,409,8,8,8,8,8,8,8,8,8',
'8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,,,,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8',
'8,8,8,,8,8,,,8,,,,,,,,,8,8,,8,8,8,8,8,8,8,,,8,8,,,,8,8,8,8,,,,,,,,,',
',,,8,8,,8,8,8,8,8,8,8,8,8,8,8,,,8,8,,,,,,,,,,8,405,405,405,405,405,405',
'405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405',
'405,,,,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405,405',
'405,405,405,405,405,,405,405,,,405,,,,,,,,,405,405,,405,405,405,405',
'405,405,405,,,405,405,,,,405,405,405,405,,,,,,,,,,,,,405,405,,405,405',
'405,405,405,405,405,405,405,405,405,,,405,405,,,,,,,,,,405,7,7,7,7,7',
'7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,,,,7,7,7,7,7,7,7,7,7,7,7,7,7,7',
'7,7,7,7,7,7,7,,7,7,7,,7,,,,,,,,,7,7,,7,7,7,7,7,7,7,,,7,7,,,,7,7,7,7',
',,,,,,,,,,,,7,7,,7,7,7,7,7,7,7,7,7,7,7,,,7,7,,,,,,,,,,7,79,79,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,,,79,79',
'79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,,79,79,79,79',
'79,,79,,,,,,,79,79,,79,79,79,79,79,79,79,,,79,79,,,,79,79,79,79,,,,',
',,,,,,,,79,79,,79,79,79,79,79,79,79,79,79,79,79,,,79,191,191,191,191',
'191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,,,,191,191,191,191,191,191,191,191,191,191,191,191,191,191',
'191,191,191,191,191,191,191,,191,191,191,191,191,,191,,,,,,,191,191',
',191,191,191,191,191,191,191,,,191,191,,,,191,191,191,191,,,,,,,,,,',
',,191,191,,191,191,191,191,191,191,191,191,191,191,191,,,191,65,65,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,,,65',
'65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,,65,65,65',
'65,65,,65,,,,,,,65,65,,65,65,65,65,65,65,65,,,65,65,,,,65,65,65,65,',
',,,,65,,,,,,,65,65,,65,65,65,65,65,65,65,65,65,65,65,,,65,738,738,738',
'738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738,738',
'738,738,738,738,,,,738,738,738,738,738,738,738,738,738,738,738,738,738',
'738,738,738,738,738,738,738,738,,738,738,,,738,,,,,,,,,738,738,,738',
'738,738,738,738,738,738,,,738,738,,,,738,738,738,738,,,,,,,,,,,,,738',
'738,,738,738,738,738,738,738,738,738,738,738,738,573,573,738,,573,,',
',,,,,,573,573,,573,573,573,573,573,573,573,,,573,573,,,,573,573,573',
'573,,,,,,,,,,,,,573,573,,573,573,573,573,573,573,573,573,573,573,573',
'906,906,573,,906,,,,,,,,,906,906,,906,906,906,906,906,906,906,,,906',
'906,,,,906,906,906,906,,,,,,906,,,,,,,906,906,,906,906,906,906,906,906',
'906,906,906,906,906,907,907,906,,907,,,,,,,,,907,907,,907,907,907,907',
'907,907,907,,,907,907,,,,907,907,907,907,,,,,,,,,,,,,907,907,,907,907',
'907,907,907,907,907,907,907,907,907,794,794,907,,794,,,,,,,,,794,794',
',794,794,794,794,794,794,794,,,794,794,,,,794,794,794,794,,,,,,,,,,',
',,794,794,,794,794,794,794,794,794,794,794,794,794,794,262,262,794,',
'262,,,,,,,,,262,262,,262,262,262,262,262,262,262,,,262,262,,,,262,262',
'262,262,,,,,,,,,,,,,262,262,,262,262,262,262,262,262,262,262,262,262',
'262,261,261,262,,261,,,,,,,,,261,261,,261,261,261,261,261,261,261,,',
'261,261,,,,261,261,261,261,,,,,,,,,,,,,261,261,,261,261,261,261,261',
'261,261,261,261,261,261,578,578,261,,578,,,,,,,,,578,578,,578,578,578',
'578,578,578,578,,,578,578,,,,578,578,578,578,,,,,,,,,,,,,578,578,,578',
'578,578,578,578,578,578,578,578,578,578,572,572,578,,572,,,,,,,,,572',
'572,,572,572,572,572,572,572,572,,,572,572,,,,572,572,572,572,,,,,,572',
',,,,,,572,572,,572,572,572,572,572,572,572,572,572,572,572,522,522,572',
',522,,,,,,,,,522,522,,522,522,522,522,522,522,522,,,522,522,,,,522,522',
'522,522,,,,,,522,,,,,,,522,522,,522,522,522,522,522,522,522,522,522',
'522,522,580,580,522,,580,,,,,,,,,580,580,,580,580,580,580,580,580,580',
',,580,580,,,,580,580,580,580,,,,,,580,,,,,,,580,580,,580,580,580,580',
'580,580,580,580,580,580,580,653,653,580,,653,,,,,,,,,653,653,,653,653',
'653,653,653,653,653,,,653,653,,,,653,653,653,653,,,,,,,,,,,,,653,653',
',653,653,653,653,653,653,653,653,653,653,653,439,439,653,,439,,,,,,',
',,439,439,,439,439,439,439,439,439,439,,,439,439,,,,439,439,439,439',
',,,,,439,,,,,,,439,439,,439,439,439,439,439,439,439,439,439,439,439',
'440,440,439,,440,,,,,,,,,440,440,,440,440,440,440,440,440,440,,,440',
'440,,,,440,440,440,440,,,,,,,,,,,,,440,440,,440,440,440,440,440,440',
'440,440,440,440,440,523,523,440,,523,,,,,,,,,523,523,,523,523,523,523',
'523,523,523,,,523,523,,,,523,523,523,523,,,,,,,,,,,,,523,523,,523,523',
'523,523,523,523,523,523,523,523,523,200,200,523,,200,,,,,,,,,200,200',
',200,200,200,200,200,200,200,,,200,200,,,,200,200,200,200,,,,,,,,,,',
',,200,200,,200,200,200,200,200,200,200,200,200,200,200,199,199,200,',
'199,,,,,,,,,199,199,,199,199,199,199,199,199,199,,,199,199,,,,199,199',
'199,199,,,,,,199,,,,,,,199,199,,199,199,199,199,199,199,199,199,199',
'199,199,511,511,199,,511,,,,,,,,,511,511,,511,511,511,511,511,511,511',
',,511,511,,,,511,511,511,511,,,,,,511,,,,,,,511,511,,511,511,511,511',
'511,511,511,511,511,511,511,512,512,511,,512,,,,,,,,,512,512,,512,512',
'512,512,512,512,512,,,512,512,,,,512,512,512,512,,,,,,,,,,,,,512,512',
',512,512,512,512,512,512,512,512,512,512,512,652,652,512,,652,,,,,,',
',,652,652,,652,652,652,652,652,652,652,,,652,652,,,,652,652,652,652',
',,,,,,,,,,,,652,652,,652,652,652,652,652,652,652,652,652,652,652,,,652' ]
        racc_action_check = arr = ::Array.new(23568, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_action_pointer = [
    -2,  1629,   nil,  1179,   nil,  1615,  1503, 21855, 21609,  1470,
  1441,  1425,  1467,   928,  1216,   666,   nil,  1902,  2038,  2854,
  1492,   nil,  2446,  2582,  2718,   792,   -15,   814,  1086,   nil,
  3398,  3534,  3670,   nil,  1365,   -47,  1435,   194,  4350,  4486,
  4622,  1299,   656,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   950,   nil,  5166,  5302,  5438,    13, 19458,  5846,  5982,   nil,
   nil,  6118,  6254,  6390,   nil, 22202,   nil,   nil,   nil,   nil,
   nil,   -57,   nil,   nil,   nil,   nil,   nil,  1273,  1254, 21978,
   nil,   nil,   nil,  7206,   nil,   nil,  7342,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1382,   nil,  7614,   nil,
   nil,   nil,  7750,  7886,  8022,  8158,  8294,  8430,   nil,  1856,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil, 22090,  1215,   nil,  8974,  9110,  9246,  9382,  9518, 23274,
 23214,  9926, 10062, 10198,   nil,  1497,   397,  1233,    -4,  1092,
  1134, 11014, 11150,   nil,   nil, 11286,  1128, 11558, 11694, 11830,
 11966, 12102, 12238, 12374, 12510, 12646, 12782, 12918, 13054, 13190,
 13326, 13462, 13598, 21350, 13870, 14006, 14142, 14278, 14414, 14550,
 14686, 14822, 14958,   nil,   nil,   nil,  3530,   nil,  1079,  1071,
   nil, 15366,  1109, 15638,   nil,   nil,   nil,   nil, 15774,   nil,
   nil, 22674, 22614,  1056, 16318, 16454,   nil,   nil,   nil,   nil,
   nil,   nil,   nil, 16590,   907,  1751,  1019, 16998,   925,   909,
   869, 17406, 17542,  1538,   384,   941,  1633,   904,   850,   -11,
   nil,   884,   663,   nil, 18902,   nil,  1317,   879,   860,  1672,
   nil,   846,   nil, 19718,   nil, 19854,   377,   nil,   770,   208,
   169,   716,   695,   -24,   671,   nil,   nil,    58,  6402,   nil,
   nil,   nil,   600,   587,   nil,   578,   555,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,  3656,   nil,   nil,   nil,   468,   nil,
   nil,   396,   179,   379,    -7, 20942, 20670,   771,    53,   166,
    53,  1744,   227,    30,   207,   nil,   nil,   -14,    48,   nil,
  1674,   nil,   350,   nil,   nil, 19990,   520,   169,   337,   398,
   425,   962,   368,   554,   nil,   690,   nil, 18222,   nil,   392,
   nil,   542,   nil,   418,   549,   814,   nil,   622,   -37,   nil,
   678,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   665, 21732,   nil,   nil,   nil, 21486,
   679,   nil,   nil,  1630,   nil, 17678,   710,   nil,   714,   nil,
   nil,  2446,   770,  1352,   944,  1222,   nil,   nil,   nil,   270,
   865,   134,   nil, 10742, 10470,   nil,  2990,   nil,   nil, 23034,
 23094, 10334,   -53,  9654,  8702,  7478,   383,   nil,  4758,  3806,
  1676,  1540,  1065,  1069,  1112,  1116,  5710,  3541,  3269,  4350,
  4214,  3942,  5166,  5030,  4894,  4622,  4078,  5302,  5574,  2112,
  2384,  4486,  5438,  1902,   -38,   nil,  1222,   nil,  1086,   nil,
   950,   nil,   nil,  1494,   nil,   nil,  1358,   -10,   nil,  1388,
  1366,   150,  1394,  1513,   nil,   nil,   406,   125,   122,  1496,
   nil,   nil, 15502,   -65,  1499,   nil,   nil,  1498,   134,  1450,
   270, 23334, 23394,  1766,  1431,   nil,   nil,  1390,   nil,   542,
   678,   814, 22854, 23154,  2174,  1494,  1471,  1412,  1327,   nil,
   nil,  2174,   nil,   nil,  2854,   nil,   nil,   nil,   nil,  2990,
  3126,  1272,   nil,  2340,   nil,   nil,  3262, 18914,   nil,   524,
   nil,   nil,  1251,   nil,  3609,   nil,  1157,  2568,   nil,   nil,
  3806,  1270,   nil,   nil,  3942,   366,   136,  1256,  1237,  4894,
   nil,  5030, 22794, 22374,    56,   nil,  1472,   nil, 22734,  5574,
 22914,   nil,   nil,  6526,  1043,  6798,   nil,  6946,   nil,   nil,
   nil,    55,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   406,   nil,   nil,   nil,   956,   nil,   nil,   nil,
   nil,   nil,  7070,   882,  9790,  1080, 10878, 15910,   853,   nil,
   nil,   nil, 16046,   815,   nil, 16182,   454,   412,   542,   678,
   725,  1766,   nil, 17814,   nil,  3682,   nil, 18086,   480,   nil,
   504, 18358,   nil,   nil,   nil,   nil,   nil,   nil, 18494,   nil,
   395,   299, 23454, 22974, 18630,  1358,   224,   nil,   nil,   229,
 18766, 19310,   nil,  1887,   -50, 19446,   -89,   nil,   -46,    11,
    -2,   153,   359,  1769,   226, 20126,  3398,   299,   302,   394,
   420, 21078,   nil,   nil,   189,   378,   491,   nil,   nil,   373,
   nil,   388,  1809,   473,   442,   458,   nil,   nil,   497,  3337,
   nil,   419,   nil,   621,   nil,   nil,   nil,   nil,   nil,   632,
   nil,   646, 13734,   580,    50,   -17,   -18,    70, 21214,  1808,
   nil,   670,   677, 20806,  1321,   nil,    69, 20534, 20398, 17418,
   281,   730,   732,   733,   nil, 20262,   745,   nil, 22314,   816,
  1993, 19582,   nil,   nil,   nil,  3258,   815, 19174, 19038,   nil,
  3126,   nil,  2718,   nil,   nil,  2582,   nil,  1494, 17950, 17270,
 17134,   -62,  2038,   nil,   935,  1040,   nil,   nil,   951,   nil,
   nil,   980,   981,   -17,  1064, 16862,   nil,   999,  1105,  1002,
  1537,   nil,   nil,  1125,   nil, 16726,  1018,  1061,   nil,   nil,
   nil,   nil,   nil,   nil, 22554,   nil,  1980,   nil,   nil,   nil,
   nil,  2296,  1628,   nil, 15230,  1197, 15094, 11422,   nil,   nil,
   406,     0,   272,   nil,  1241,   nil,   nil,  1257,  1259,  1144,
   nil,  6266,   nil,  2068,   nil,   nil,   373,   nil, 10606,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,  1203,  1207,   nil,  2310,
  8838,   nil,   nil,   nil,  1263,  1229,   nil,   nil,   nil,  8566,
   nil,   nil,     0,  6934,   nil,  1295,  1258,   nil,   nil,   318,
   nil,  1396,  1399,  6662,  5710,   nil,   nil,  4758,   nil,   nil,
  1349,  1326,  1329,   nil,  1341,  1336,   nil,   nil, 20002,   nil,
   nil,   nil,  4214,   nil,  4078,  1608,  1630,  1444,   433,   nil,
   nil,  2310,   nil,   nil,   nil,   145,  1766,  1529,   nil,  2204,
   nil,   nil,   nil,  1630,  1537,  1358, 22434, 22494,  1591,   475,
   nil,   nil,   nil,  1579,   nil,  1462,  1582,   nil,  1499,   233,
    97,   352,  1905,   nil,   nil,   nil,   nil,  1810 ]

racc_action_default = [
    -3,  -528,    -1,  -516,    -4,    -6,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -268,   -36,   -37,  -528,  -528,   -42,
   -44,   -45,  -279,  -317,  -318,   -49,  -246,  -246,  -246,   -61,
   -10,   -65,   -72,   -74,  -528,  -443,  -528,  -528,  -528,  -528,
  -528,  -518,  -226,  -261,  -262,  -263,  -264,  -265,  -266,  -267,
  -506,  -270,  -528,  -527,  -498,  -287,  -527,  -528,  -528,  -292,
  -295,  -516,  -528,  -528,  -309,  -528,  -319,  -320,  -388,  -389,
  -390,  -391,  -392,  -527,  -395,  -527,  -527,  -527,  -527,  -527,
  -422,  -428,  -429,  -432,  -433,  -434,  -435,  -436,  -437,  -438,
  -439,  -440,  -441,  -442,  -445,  -446,  -528,    -2,  -517,  -523,
  -524,  -525,  -528,  -528,  -528,  -528,  -528,    -3,   -13,  -528,
  -100,  -101,  -102,  -103,  -104,  -105,  -106,  -109,  -110,  -111,
  -112,  -113,  -114,  -115,  -116,  -117,  -118,  -119,  -120,  -121,
  -122,  -123,  -124,  -125,  -126,  -127,  -128,  -129,  -130,  -131,
  -132,  -133,  -134,  -135,  -136,  -137,  -138,  -139,  -140,  -141,
  -142,  -143,  -144,  -145,  -146,  -147,  -148,  -149,  -150,  -151,
  -152,  -153,  -154,  -155,  -156,  -157,  -158,  -159,  -160,  -161,
  -162,  -163,  -164,  -165,  -166,  -167,  -168,  -169,  -170,  -171,
  -172,  -173,  -174,  -175,  -176,  -177,  -178,  -179,  -180,  -181,
  -182,  -528,   -18,  -107,   -10,  -528,  -528,  -528,  -527,  -528,
  -528,  -528,  -528,  -528,   -40,  -528,  -443,  -528,  -268,  -528,
  -528,   -10,  -528,   -41,  -218,  -528,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,  -528,
  -528,  -528,  -528,  -359,  -361,   -46,  -227,  -239,  -253,  -253,
  -243,  -528,  -254,  -528,  -279,  -317,  -318,  -500,  -528,   -47,
   -48,  -528,  -528,   -53,  -527,  -528,  -286,  -364,  -371,  -373,
   -59,  -369,   -60,  -528,  -516,   -11,   -61,   -10,  -528,  -528,
   -66,   -69,   -10,   -80,  -528,  -528,   -87,  -282,  -518,  -528,
  -321,  -370,  -528,   -71,  -528,   -76,  -275,  -430,  -431,  -528,
  -203,  -204,  -219,  -528,  -519,   -10,  -518,  -228,  -518,  -520,
  -520,  -528,  -528,  -520,  -528,  -288,  -289,  -528,  -528,  -332,
  -333,  -340,  -527,  -464,  -347,  -527,  -527,  -358,  -463,  -465,
  -466,  -467,  -468,  -469,  -528,  -482,  -487,  -488,  -490,  -491,
  -492,  -528,   -43,  -528,  -528,  -528,  -528,  -516,  -528,  -517,
  -443,  -528,  -528,  -268,  -528,  -471,  -472,   -96,  -528,   -98,
  -528,  -268,  -528,  -306,  -443,  -528,  -100,  -101,  -138,  -139,
  -155,  -160,  -167,  -170,  -312,  -528,  -496,  -528,  -393,  -528,
  -408,  -528,  -410,  -528,  -528,  -528,  -400,  -528,  -528,  -406,
  -528,  -421,  -423,  -424,  -425,  -426,   928,    -5,  -526,   -19,
   -20,   -21,   -22,   -23,  -528,  -528,   -15,   -16,   -17,  -528,
  -528,   -25,   -33,  -183,  -254,  -528,  -528,   -26,   -34,   -35,
   -27,  -185,  -528,  -507,  -508,  -246,  -366,  -509,  -510,  -507,
  -246,  -508,  -368,  -512,  -513,   -32,  -192,   -38,   -39,  -528,
  -528,  -527,  -275,  -528,  -528,  -528,  -528,  -285,  -193,  -194,
  -195,  -196,  -197,  -198,  -199,  -200,  -205,  -206,  -207,  -208,
  -209,  -210,  -211,  -212,  -213,  -214,  -215,  -216,  -217,  -220,
  -221,  -222,  -223,  -528,  -527,  -240,  -528,  -241,  -528,  -251,
  -528,  -255,  -503,  -246,  -507,  -508,  -246,  -527,   -54,  -528,
  -518,  -518,  -253,  -239,  -247,  -248,  -528,  -527,  -527,  -528,
  -281,    -9,  -517,  -528,   -62,  -273,   -77,   -67,  -528,  -528,
  -527,  -528,  -528,   -86,  -528,  -430,  -431,   -73,   -78,  -528,
  -528,  -528,  -528,  -528,  -224,  -528,  -380,  -528,  -528,  -229,
  -230,  -522,  -521,  -232,  -522,  -277,  -278,  -499,  -329,   -10,
   -10,  -528,  -331,  -528,  -349,  -356,  -528,  -353,  -354,  -528,
  -357,  -464,  -528,  -473,  -528,  -475,  -477,  -481,  -489,  -493,
   -10,  -322,  -323,  -324,   -10,  -528,  -528,  -528,  -528,   -10,
  -375,  -527,  -528,  -528,  -275,  -301,   -96,   -97,  -528,  -527,
  -528,  -304,  -447,  -528,  -528,  -528,  -310,  -462,  -314,  -514,
  -515,  -518,  -394,  -409,  -412,  -413,  -415,  -396,  -411,  -397,
  -398,  -399,  -528,  -402,  -404,  -405,  -528,  -427,    -7,   -14,
  -108,   -24,  -528,  -260,  -528,  -276,  -528,  -528,   -55,  -237,
  -238,  -365,  -528,   -57,  -367,  -528,  -507,  -508,  -507,  -508,
  -528,  -183,  -284,  -528,  -343,  -528,  -345,   -10,  -253,  -252,
  -256,  -528,  -501,  -502,   -50,  -362,   -51,  -363,   -10,  -233,
  -528,  -528,  -528,  -528,  -528,   -42,  -528,  -245,  -249,  -528,
   -10,   -10,  -280,   -12,   -62,  -528,   -70,   -75,  -528,  -507,
  -508,  -527,  -511,   -85,  -528,  -528,  -191,  -201,  -202,  -528,
  -527,  -527,  -271,  -272,  -520,  -528,  -528,  -330,  -341,  -528,
  -348,  -527,  -342,  -528,  -527,  -527,  -483,  -470,  -528,  -528,
  -480,  -527,  -325,  -527,  -293,  -326,  -327,  -328,  -296,  -528,
  -299,  -528,  -528,  -528,  -507,  -508,  -511,  -274,  -528,   -96,
   -99,  -511,  -528,   -10,  -528,  -449,  -528,   -10,   -10,  -462,
  -528,  -495,  -495,  -495,  -459,  -460,  -464,  -485,  -528,  -528,
  -528,   -10,  -401,  -403,  -407,  -184,  -258,  -528,  -528,   -29,
  -187,   -30,  -188,   -56,   -31,  -189,   -58,  -190,  -528,  -528,
  -528,  -276,  -225,  -344,  -528,  -528,  -242,  -257,  -528,  -234,
  -235,  -527,  -527,  -518,  -528,  -528,  -250,  -528,  -528,   -68,
   -81,   -79,  -283,  -527,  -338,   -10,  -381,  -527,  -382,  -383,
  -231,  -334,  -335,  -355,  -528,  -275,  -528,  -351,  -352,  -474,
  -476,  -479,  -528,  -336,  -528,  -528,   -10,   -10,  -298,  -300,
  -528,  -276,  -528,  -276,  -528,  -448,  -307,  -528,  -528,  -518,
  -451,  -528,  -455,  -528,  -457,  -458,  -528,  -461,  -528,  -315,
  -497,  -414,  -417,  -418,  -419,  -420,  -528,  -259,   -28,  -186,
  -528,  -346,  -360,   -52,  -528,  -253,  -372,  -374,    -8,   -10,
  -387,  -339,  -528,  -528,  -385,  -274,  -527,  -478,  -290,  -528,
  -291,  -528,  -528,  -528,   -10,  -302,  -305,   -10,  -311,  -313,
  -528,  -495,  -495,  -494,  -495,  -528,  -486,  -484,  -462,  -416,
  -236,  -244,  -528,  -386,   -10,   -88,  -528,  -528,   -95,  -384,
  -350,   -10,  -294,  -297,  -256,  -527,   -10,  -528,  -450,  -528,
  -453,  -454,  -456,   -10,  -380,  -527,  -528,  -528,   -94,  -527,
  -376,  -377,  -378,  -528,  -308,  -495,  -528,  -379,  -528,  -507,
  -508,  -511,   -93,  -337,  -303,  -452,  -316,   -89 ]

clist = [
'13,477,553,311,491,213,113,113,290,290,327,374,280,527,319,568,517,205',
'205,412,419,680,205,205,205,392,12,734,488,731,13,284,284,5,545,108',
'193,548,550,290,290,263,270,272,728,247,247,247,639,362,639,101,205',
'205,116,116,12,205,205,14,696,205,351,360,113,303,645,97,657,647,577',
'688,248,248,248,552,308,98,113,293,2,343,344,530,533,347,593,537,876',
'14,286,286,603,802,642,659,704,708,13,305,276,345,205,205,205,205,13',
'13,806,101,278,560,564,346,822,824,825,245,259,260,807,353,361,637,12',
'348,399,400,401,402,718,5,12,12,896,783,648,392,723,403,5,381,383,585',
'867,390,660,661,422,365,642,727,587,738,878,317,538,14,805,354,694,316',
'315,312,876,14,14,376,494,734,588,731,474,497,498,910,249,249,249,712',
'787,852,411,417,420,378,35,404,435,379,113,581,385,602,13,205,205,205',
'205,434,375,205,205,205,388,831,740,741,313,819,871,13,205,405,356,192',
'35,283,283,848,12,308,553,800,397,700,639,1,,,666,,267,271,709,,,12',
',,,,,,,416,416,,350,364,,364,,14,900,901,,902,290,,,873,,873,205,205',
'873,,,,14,290,327,205,,518,541,13,,,,284,13,,35,,,493,247,,720,,35,35',
'284,698,247,,925,,,923,,12,,13,,,12,743,,,514,,492,248,,,734,10,731',
',101,248,688,,,,507,,528,12,529,,696,903,14,314,501,873,286,14,290,865',
',205,205,276,502,10,911,586,276,286,645,647,,503,,490,495,,509,,14,360',
',553,499,565,566,,,,,,,205,,,35,355,,753,,425,430,779,756,,766,630,',
',773,101,,35,,917,,,,793,113,,797,798,113,,582,567,,,,,,10,249,249,',
',,,361,10,10,249,,,,814,,609,,817,818,610,,434,618,205,,,,623,,483,486',
',,,116,,639,,116,,790,,668,,,35,308,,,283,35,857,,,,,,,,,414,418,283',
',,,,290,,,,518,,35,,,,267,205,271,644,,,646,13,,,788,,,284,,205,434',
',10,650,651,,,,,,713,434,290,,205,,,12,722,10,,,308,479,663,481,,,13',
'13,482,,,,,692,,,,,364,,,,,,,,,13,14,912,,13,12,12,286,890,13,,205,434',
',,897,,434,864,205,,,,205,,205,12,,279,327,12,,,764,308,12,10,881,14',
'14,,10,308,749,751,361,,724,,754,,916,,705,705,739,205,205,,14,884,',
'205,14,10,425,430,891,14,,638,620,725,,,,624,13,,,,,290,,,,518,,13,',
',,290,,205,,781,,,,13,13,,12,,284,691,,,,695,,,,12,284,,774,,,,,,,829',
'684,12,12,35,620,,,620,,283,,14,671,613,,,,,,,,,14,671,,733,,,,,,,,205',
'14,14,,,13,286,35,35,13,13,,,416,364,,286,838,,113,,,,13,812,,,,35,',
'205,12,35,,410,12,12,35,,,671,640,,314,810,643,,,671,12,,279,,,815,',
'816,,,,820,656,,,14,,,13,14,14,,,,,,434,,,,844,,835,14,,,,205,,13,13',
'638,,,12,,,640,,,314,,,,10,,35,,845,,,859,,290,,12,12,35,279,,,771,772',
'279,,,870,14,,35,35,,13,,283,733,886,,918,,,10,10,705,283,,,13,14,14',
'13,,,,,,,,12,,620,,10,624,,,10,13,,,,10,,12,13,,12,,,13,746,,,,,,13',
',205,434,,14,35,12,,888,35,35,,,12,,856,,,12,14,767,,14,35,308,12,,',
',,,,,640,,,,,,14,872,,874,,,,14,,,,,14,10,,,,,,14,,786,,,10,,,,35,,',
',,,620,620,10,10,,,,,,,,,,,,35,35,,414,,,,,,733,,,,,,,,,,,,,,,,,827',
',,,915,,,,,,,,837,,,,,35,,,,885,,,10,,,,10,10,,,35,214,,35,,246,246',
'246,414,,10,,,,,,,,,,35,300,301,302,,,,35,,,,,35,,,,246,246,,35,,,671',
',,,,685,686,,,,,,10,,,,,,,877,,,320,,,,701,,,,703,,,10,10,711,,,,380',
',382,382,386,389,382,204,,,,,,,,894,,,,,,,,,,,,,,,,,,,894,,,10,,,,889',
'306,,,,,342,342,,,342,10,,,10,,,,,,,,,765,,,,,,,,10,,,768,,,,10,,,,',
'10,,,777,778,,,10,342,342,342,342,,413,246,421,246,,,436,,,,,,,,,,,',
',,214,,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463',
'464,465,466,467,468,469,470,471,472,473,,,,,,,,,246,,246,,,,,246,,,',
',,246,246,836,,,,,,,246,,,,,,,,,,,,,,,,489,437,438,,,,,,,,,446,,,524',
',,,,,,851,,,,,,,,,,,,,,,,,,,,,861,862,,,,,,,,,,,,,,,544,,,544,544,,',
',289,289,,,,,,289,289,289,,,,,,,,,,883,,,,289,,,,,,,,289,289,,895,,',
',,,,,,,,,,,,,,,,,904,,,,,,246,909,,,,,913,,,,,,,,,,,,342,342,,,,,,,246',
',436,631,421,,,,,619,,,,,,,,,,,,,,,591,,,,,,,,,,,246,,246,,246,,,,,',
',,,,,,,,,,655,,,634,,,,,,,,,619,,246,619,634,,,,,,,676,677,678,634,634',
',,,,,,,246,,,246,,,,,289,,289,289,289,289,289,289,289,289,289,289,289',
'289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,,,,,246',
',,,289,,289,,246,,,289,,306,,,,,,,,,,,,,,,,,,,,,289,,,,,,,745,679,246',
',750,752,289,,,,755,,,757,,289,,,,,,762,,,,,,,,246,,,,,,,,,,,,,246,',
',,,,,,,,,,,,,,,342,,726,,,,,,,,246,,,,,,,,289,,,,,,,619,,,,,,,,,784',
'789,,,,,,246,,,,544,,,544,544,,,,,,784,,784,,,,,,,246,,,,289,,,,,,,',
'246,839,,,,,,,,,,750,752,755,,,,,,,289,289,289,,,,,,246,,,,,,,,,,,,',
',,,,,,,,619,619,,,289,,289,,289,,342,,850,,,,854,,,,,,,,,,,,,,,,246',
',,,289,,,,,,,,839,,,289,289,289,,,,,,,,,,289,,,289,,,,,246,,,,,,,289',
',,,,,,,,,,544,246,,,,,,,,,,342,,,,,,,,,,,,,246,,,,,,,,,,,,,,,784,,,',
',,,,,,,,,,784,,289,,289,,,,,,,,,,,289,,,,,,,,289,,,,,,,,289,,,,,,,,',
',,,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,,289,,,,,,,,,,,,,,,,,,,,,,,289,,,,,,,,,,,,289,,,,,,,,,,,289,289,289',
',,,,,,,,,,,,,,289,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',
',,289,,,,,,,,,,,,289,,,,,,,,,,,,,289,,,,,,,,,,289,,,,,,,,,,,,,,,,,,',
'289' ]
        racc_goto_table = arr = ::Array.new(2240, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

clist = [
'21,59,136,22,32,18,48,48,52,52,105,47,41,8,102,78,43,21,21,24,24,10',
'21,21,21,47,20,106,35,108,21,21,21,7,107,14,14,107,107,52,52,34,34,34',
'82,29,29,29,60,46,60,81,21,21,50,50,20,21,21,23,138,21,21,21,48,51,58',
'4,60,58,45,104,54,54,54,139,29,6,48,42,2,16,16,55,55,16,127,55,142,23',
'23,23,127,76,145,61,77,77,21,85,38,86,21,21,21,21,21,21,87,81,39,75',
'75,88,135,135,135,31,31,31,89,23,23,36,20,4,16,16,16,16,90,7,20,20,91',
'11,36,47,92,7,7,124,124,93,94,124,36,36,22,95,145,96,97,98,99,100,101',
'23,11,79,103,74,72,71,142,23,23,70,62,106,84,108,111,113,114,115,56',
'56,56,116,117,118,18,18,18,122,44,2,18,123,48,80,125,126,21,21,21,21',
'21,48,83,21,21,21,128,129,130,131,56,133,134,21,21,27,19,15,44,44,44',
'12,20,29,136,140,5,136,60,1,,,43,,57,57,78,,,20,,,,,,,,54,54,,44,44',
',44,,23,135,135,,135,52,,,106,,106,21,21,106,,,,23,52,105,21,,41,102',
'21,,,,21,21,,44,,,29,29,,45,,44,44,21,139,29,,135,,,76,,20,,21,,,20',
'127,,,51,,54,54,,,106,17,108,,81,54,104,,,,42,,51,20,51,,138,82,23,25',
'4,106,23,23,52,77,,21,21,38,6,17,11,46,38,23,58,58,,39,,31,31,,39,,23',
'21,,136,31,16,16,,,,,,,21,,,44,17,,35,,33,33,43,35,,59,22,,,32,81,,44',
',10,,,,107,48,,107,107,48,,81,4,,,,,,17,56,56,,,,,23,17,17,56,,,,8,',
'14,,8,8,14,,48,34,21,,,,34,,33,33,,,,50,,60,,50,,55,,22,,,44,29,,,44',
'44,136,,,,,,,,,25,25,44,,,,,52,,,,41,,44,,,,57,21,57,34,,,34,21,,,24',
',,21,,21,48,,17,51,51,,,,,,22,48,52,,21,,,20,22,17,,,29,25,7,25,,,21',
'21,25,,,,,21,,,,,44,,,,,,,,,21,23,78,,21,20,20,23,107,21,,21,48,,,8',
',48,75,21,,,,21,,21,20,,9,105,20,,,102,29,20,17,59,23,23,,17,29,18,18',
'23,,16,,18,,8,,81,81,51,21,21,,23,75,,21,23,17,33,33,75,23,,56,57,81',
',,,57,21,,,,,52,,,,41,,21,,,,52,,21,,41,,,,21,21,,20,,21,109,,,,109',
',,,20,21,,29,,,,,,,47,56,20,20,44,57,,,57,,44,,23,33,25,,,,,,,,,23,33',
',109,,,,,,,,21,23,23,,,21,23,44,44,21,21,,,54,44,,23,18,,48,,,,21,16',
',,,44,,21,20,44,,9,20,20,44,,,33,25,,25,54,25,,,33,20,,9,,,81,,81,,',
',81,25,,,23,,,21,23,23,,,,,,48,,,,51,,23,23,,,,21,,21,21,56,,,20,,,25',
',,25,,,,17,,44,,54,,,16,,52,,20,20,44,9,,,33,33,9,,,51,23,,44,44,,21',
',44,109,21,,22,,,17,17,81,44,,,21,23,23,21,,,,,,,,20,,57,,17,57,,,17',
'21,,,,17,,20,21,,20,,,21,25,,,,,,21,,21,48,,23,44,20,,23,44,44,,,20',
',109,,,20,23,25,,23,44,29,20,,,,,,,,25,,,,,,23,109,,109,,,,23,,,,,23',
'17,,,,,,23,,25,,,17,,,,44,,,,,,57,57,17,17,,,,,,,,,,,,44,44,,25,,,,',
',109,,,,,,,,,,,,,,,,,25,,,,109,,,,,,,,25,,,,,44,,,,44,,,17,,,,17,17',
',,44,28,,44,,28,28,28,25,,17,,,,,,,,,,44,28,28,28,,,,44,,,,,44,,,,28',
'28,,44,,,33,,,,,9,9,,,,,,17,,,,,,,25,,,53,,,,9,,,,9,,,17,17,9,,,,53',
',53,53,53,53,53,26,,,,,,,,25,,,,,,,,,,,,,,,,,,,25,,,17,,,,17,26,,,,',
'26,26,,,26,17,,,17,,,,,,,,,9,,,,,,,,17,,,9,,,,17,,,,,17,,,9,9,,,17,26',
'26,26,26,,28,28,28,28,,,28,,,,,,,,,,,,,,28,,28,28,28,28,28,28,28,28',
'28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,,,,,,,,,28,,28',
',,,,28,,,,,,28,28,9,,,,,,,28,,,,,,,,,,,,,,,,53,26,26,,,,,,,,,26,,,28',
',,,,,,9,,,,,,,,,,,,,,,,,,,,,9,9,,,,,,,,,,,,,,,53,,,53,53,,,,37,37,,',
',,,37,37,37,,,,,,,,,,9,,,,37,,,,,,,,37,37,,9,,,,,,,,,,,,,,,,,,,,9,,',
',,,28,9,,,,,9,,,,,,,,,,,,26,26,,,,,,,28,,28,28,28,,,,,53,,,,,,,,,,,',
',,,26,,,,,,,,,,,28,,28,,28,,,,,,,,,,,,,,,,28,,,53,,,,,,,,,53,,28,53',
'53,,,,,,,28,28,28,53,53,,,,,,,,28,,,28,,,,,37,,37,37,37,37,37,37,37',
'37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,,,,,28,,,,37',
',37,,28,,,37,,26,,,,,,,,,,,,,,,,,,,,,37,,,,,,,28,26,28,,28,28,37,,,',
'28,,,28,,37,,,,,,28,,,,,,,,28,,,,,,,,,,,,,28,,,,,,,,,,,,,,,,,26,,26',
',,,,,,,28,,,,,,,,37,,,,,,,53,,,,,,,,,53,53,,,,,,28,,,,53,,,53,53,,,',
',,53,,53,,,,,,,28,,,,37,,,,,,,,28,28,,,,,,,,,,28,28,28,,,,,,,37,37,37',
',,,,,28,,,,,,,,,,,,,,,,,,,,,53,53,,,37,,37,,37,,26,,53,,,,53,,,,,,,',
',,,,,,,,28,,,,37,,,,,,,,28,,,37,37,37,,,,,,,,,,37,,,37,,,,,28,,,,,,',
'37,,,,,,,,,,,53,28,,,,,,,,,,26,,,,,,,,,,,,,28,,,,,,,,,,,,,,,53,,,,,',
',,,,,,,,53,,37,,37,,,,,,,,,,,37,,,,,,,,37,,,,,,,,37,,,,,,,,,,,,,,,,',
',,,,,,,37,,,,,,,,,,37,,,,,,37,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,',
',,,,,,,,,,,,,,,,,37,,,,,,,,,,,,37,,,,,,,,,,,37,37,37,,,,,,,,,,,,,,,37',
',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,37,,,,,,,,,,,,37',
',,,,,,,,,,,,37,,,,,,,,,,37,,,,,,,,,,,,,,,,,,,37' ]
        racc_goto_check = arr = ::Array.new(2240, nil)
        idx = 0
        clist.each do |str|
          str.split(',', -1).each do |i|
            arr[idx] = i.to_i unless i.empty?
            idx += 1
          end
        end

racc_goto_pointer = [
   nil,   227,    80,   nil,    64,   126,    74,    33,  -292,   558,
  -505,  -545,  -564,   nil,    28,   207,    24,   319,   -13,   152,
    26,     0,   -50,    59,  -176,   283,  1121,   105,  1033,    23,
   nil,    95,  -260,   186,    15,  -235,  -351,  1357,    70,    80,
   nil,   -19,    47,  -278,   186,  -288,   -14,   -54,    -1,   nil,
    47,    24,   -23,  1058,    50,  -226,   154,   206,  -417,  -248,
  -428,  -401,   -97,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   102,   109,   107,   nil,   105,  -232,  -608,  -469,  -333,    97,
  -171,    48,  -543,   135,  -205,    48,    42,  -596,    53,  -588,
  -445,  -731,  -443,  -220,  -672,    85,  -435,  -222,  -435,  -675,
    99,  -161,   -42,  -387,  -472,   -46,  -560,  -288,  -558,   123,
   nil,   -71,   nil,   -95,   -95,  -720,  -391,  -501,  -606,   nil,
   nil,   nil,   114,   116,    66,   115,  -192,  -293,   126,  -535,
  -389,  -389,   nil,  -520,  -611,  -617,  -332,   nil,  -487,  -259,
  -476,   nil,  -735,   nil,   nil,  -384 ]

racc_goto_default = [
   nil,   nil,   nil,     3,   nil,     4,   349,   275,   nil,   526,
   nil,   803,   nil,   274,   nil,   nil,   nil,   209,    16,    11,
   210,   299,   nil,   208,   nil,   252,    15,   nil,    19,    20,
    21,   nil,    25,   674,   nil,   nil,   nil,    26,    29,   nil,
    31,    34,    33,   nil,   206,   359,   nil,   115,   428,   114,
    69,   nil,    42,   307,   309,   nil,   310,   426,   621,   475,
   250,   nil,   nil,   265,    43,    44,    45,    46,    47,    48,
    49,   nil,   266,    55,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   561,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   322,   321,   690,   324,   nil,   325,   326,
   244,   nil,   432,   nil,   nil,   nil,   nil,   nil,   nil,    68,
    70,    71,    72,   nil,   nil,   nil,   nil,   598,   nil,   nil,
   nil,   nil,   391,   730,   732,   nil,   333,   328,   335,   nil,
   555,   556,   737,   338,   341,   257 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 139, :_reduce_none,
  2, 140, :_reduce_2,
  0, 141, :_reduce_3,
  1, 141, :_reduce_4,
  3, 141, :_reduce_5,
  1, 143, :_reduce_none,
  4, 143, :_reduce_7,
  4, 146, :_reduce_8,
  2, 147, :_reduce_9,
  0, 151, :_reduce_10,
  1, 151, :_reduce_11,
  3, 151, :_reduce_12,
  0, 165, :_reduce_13,
  4, 145, :_reduce_14,
  3, 145, :_reduce_15,
  3, 145, :_reduce_none,
  3, 145, :_reduce_17,
  2, 145, :_reduce_18,
  3, 145, :_reduce_19,
  3, 145, :_reduce_20,
  3, 145, :_reduce_21,
  3, 145, :_reduce_22,
  3, 145, :_reduce_23,
  4, 145, :_reduce_none,
  3, 145, :_reduce_25,
  3, 145, :_reduce_26,
  3, 145, :_reduce_27,
  6, 145, :_reduce_none,
  5, 145, :_reduce_29,
  5, 145, :_reduce_none,
  5, 145, :_reduce_none,
  3, 145, :_reduce_none,
  3, 145, :_reduce_33,
  3, 145, :_reduce_34,
  3, 145, :_reduce_35,
  1, 145, :_reduce_none,
  1, 164, :_reduce_none,
  3, 164, :_reduce_38,
  3, 164, :_reduce_39,
  2, 164, :_reduce_40,
  2, 164, :_reduce_41,
  1, 164, :_reduce_none,
  1, 154, :_reduce_none,
  1, 156, :_reduce_none,
  1, 156, :_reduce_none,
  2, 156, :_reduce_46,
  2, 156, :_reduce_47,
  2, 156, :_reduce_48,
  1, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 168, :_reduce_none,
  4, 173, :_reduce_none,
  2, 167, :_reduce_53,
  3, 167, :_reduce_none,
  4, 167, :_reduce_55,
  5, 167, :_reduce_none,
  4, 167, :_reduce_57,
  5, 167, :_reduce_none,
  2, 167, :_reduce_59,
  2, 167, :_reduce_60,
  1, 157, :_reduce_61,
  3, 157, :_reduce_62,
  1, 177, :_reduce_63,
  3, 177, :_reduce_64,
  1, 176, :_reduce_65,
  2, 176, :_reduce_66,
  3, 176, :_reduce_67,
  5, 176, :_reduce_none,
  2, 176, :_reduce_69,
  4, 176, :_reduce_none,
  2, 176, :_reduce_71,
  1, 176, :_reduce_72,
  3, 176, :_reduce_none,
  1, 179, :_reduce_74,
  3, 179, :_reduce_75,
  2, 178, :_reduce_76,
  3, 178, :_reduce_77,
  1, 181, :_reduce_none,
  3, 181, :_reduce_none,
  1, 180, :_reduce_80,
  4, 180, :_reduce_81,
  3, 180, :_reduce_82,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  3, 180, :_reduce_none,
  2, 180, :_reduce_none,
  1, 180, :_reduce_none,
  1, 155, :_reduce_88,
  4, 155, :_reduce_89,
  3, 155, :_reduce_90,
  3, 155, :_reduce_91,
  3, 155, :_reduce_92,
  3, 155, :_reduce_93,
  2, 155, :_reduce_94,
  1, 155, :_reduce_none,
  1, 183, :_reduce_none,
  2, 184, :_reduce_97,
  1, 184, :_reduce_98,
  3, 184, :_reduce_99,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_none,
  1, 185, :_reduce_103,
  1, 185, :_reduce_104,
  1, 152, :_reduce_105,
  1, 152, :_reduce_none,
  1, 153, :_reduce_107,
  3, 153, :_reduce_108,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 186, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  1, 187, :_reduce_none,
  3, 166, :_reduce_183,
  5, 166, :_reduce_184,
  3, 166, :_reduce_185,
  6, 166, :_reduce_186,
  5, 166, :_reduce_187,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  5, 166, :_reduce_none,
  4, 166, :_reduce_none,
  3, 166, :_reduce_none,
  3, 166, :_reduce_193,
  3, 166, :_reduce_194,
  3, 166, :_reduce_195,
  3, 166, :_reduce_196,
  3, 166, :_reduce_197,
  3, 166, :_reduce_198,
  3, 166, :_reduce_199,
  3, 166, :_reduce_200,
  4, 166, :_reduce_none,
  4, 166, :_reduce_none,
  2, 166, :_reduce_203,
  2, 166, :_reduce_204,
  3, 166, :_reduce_205,
  3, 166, :_reduce_206,
  3, 166, :_reduce_207,
  3, 166, :_reduce_208,
  3, 166, :_reduce_209,
  3, 166, :_reduce_210,
  3, 166, :_reduce_211,
  3, 166, :_reduce_212,
  3, 166, :_reduce_213,
  3, 166, :_reduce_214,
  3, 166, :_reduce_215,
  3, 166, :_reduce_216,
  3, 166, :_reduce_217,
  2, 166, :_reduce_218,
  2, 166, :_reduce_219,
  3, 166, :_reduce_220,
  3, 166, :_reduce_221,
  3, 166, :_reduce_222,
  3, 166, :_reduce_223,
  3, 166, :_reduce_224,
  5, 166, :_reduce_225,
  1, 166, :_reduce_none,
  1, 163, :_reduce_none,
  1, 160, :_reduce_228,
  2, 160, :_reduce_229,
  2, 160, :_reduce_230,
  4, 160, :_reduce_231,
  2, 160, :_reduce_232,
  3, 195, :_reduce_233,
  4, 195, :_reduce_234,
  4, 195, :_reduce_none,
  6, 195, :_reduce_none,
  1, 196, :_reduce_237,
  1, 196, :_reduce_none,
  1, 169, :_reduce_239,
  2, 169, :_reduce_240,
  2, 169, :_reduce_241,
  4, 169, :_reduce_242,
  1, 169, :_reduce_243,
  4, 199, :_reduce_none,
  1, 199, :_reduce_none,
  0, 201, :_reduce_246,
  2, 172, :_reduce_247,
  1, 200, :_reduce_none,
  2, 200, :_reduce_249,
  3, 200, :_reduce_250,
  2, 198, :_reduce_251,
  2, 197, :_reduce_252,
  0, 197, :_reduce_253,
  1, 192, :_reduce_254,
  2, 192, :_reduce_255,
  3, 192, :_reduce_256,
  4, 192, :_reduce_257,
  3, 162, :_reduce_258,
  4, 162, :_reduce_259,
  2, 162, :_reduce_260,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  1, 190, :_reduce_none,
  0, 223, :_reduce_270,
  4, 190, :_reduce_271,
  4, 190, :_reduce_272,
  3, 190, :_reduce_273,
  3, 190, :_reduce_274,
  2, 190, :_reduce_275,
  4, 190, :_reduce_276,
  3, 190, :_reduce_277,
  3, 190, :_reduce_278,
  1, 190, :_reduce_279,
  4, 190, :_reduce_280,
  3, 190, :_reduce_281,
  1, 190, :_reduce_282,
  5, 190, :_reduce_283,
  4, 190, :_reduce_284,
  3, 190, :_reduce_285,
  2, 190, :_reduce_286,
  1, 190, :_reduce_none,
  2, 190, :_reduce_288,
  2, 190, :_reduce_289,
  6, 190, :_reduce_290,
  6, 190, :_reduce_291,
  0, 224, :_reduce_292,
  0, 225, :_reduce_293,
  7, 190, :_reduce_294,
  0, 226, :_reduce_295,
  0, 227, :_reduce_296,
  7, 190, :_reduce_297,
  5, 190, :_reduce_298,
  4, 190, :_reduce_299,
  5, 190, :_reduce_300,
  0, 228, :_reduce_301,
  0, 229, :_reduce_302,
  9, 190, :_reduce_303,
  0, 230, :_reduce_304,
  6, 190, :_reduce_305,
  0, 231, :_reduce_306,
  0, 232, :_reduce_307,
  8, 190, :_reduce_308,
  0, 233, :_reduce_309,
  0, 234, :_reduce_310,
  6, 190, :_reduce_311,
  0, 235, :_reduce_312,
  6, 190, :_reduce_313,
  0, 236, :_reduce_314,
  0, 237, :_reduce_315,
  9, 190, :_reduce_316,
  1, 190, :_reduce_317,
  1, 190, :_reduce_318,
  1, 190, :_reduce_319,
  1, 190, :_reduce_none,
  1, 159, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  1, 213, :_reduce_none,
  2, 213, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  1, 215, :_reduce_none,
  2, 212, :_reduce_329,
  3, 238, :_reduce_330,
  2, 238, :_reduce_331,
  1, 238, :_reduce_none,
  1, 238, :_reduce_none,
  3, 239, :_reduce_334,
  3, 239, :_reduce_335,
  1, 214, :_reduce_336,
  5, 214, :_reduce_337,
  1, 149, :_reduce_none,
  2, 149, :_reduce_339,
  1, 241, :_reduce_340,
  3, 241, :_reduce_341,
  3, 242, :_reduce_342,
  1, 174, :_reduce_none,
  2, 174, :_reduce_344,
  1, 174, :_reduce_345,
  3, 174, :_reduce_346,
  1, 243, :_reduce_347,
  2, 245, :_reduce_348,
  1, 245, :_reduce_349,
  6, 240, :_reduce_350,
  4, 240, :_reduce_351,
  4, 240, :_reduce_352,
  2, 240, :_reduce_353,
  2, 240, :_reduce_354,
  4, 240, :_reduce_355,
  2, 240, :_reduce_356,
  2, 240, :_reduce_357,
  1, 240, :_reduce_358,
  0, 249, :_reduce_359,
  5, 248, :_reduce_360,
  2, 170, :_reduce_361,
  4, 170, :_reduce_none,
  4, 170, :_reduce_none,
  2, 211, :_reduce_364,
  4, 211, :_reduce_365,
  3, 211, :_reduce_366,
  4, 211, :_reduce_367,
  3, 211, :_reduce_368,
  2, 211, :_reduce_369,
  1, 211, :_reduce_370,
  0, 251, :_reduce_371,
  5, 210, :_reduce_372,
  0, 252, :_reduce_373,
  5, 210, :_reduce_374,
  0, 254, :_reduce_375,
  6, 216, :_reduce_376,
  1, 253, :_reduce_377,
  1, 253, :_reduce_none,
  6, 148, :_reduce_379,
  0, 148, :_reduce_380,
  1, 255, :_reduce_381,
  1, 255, :_reduce_none,
  1, 255, :_reduce_none,
  2, 256, :_reduce_384,
  1, 256, :_reduce_385,
  2, 150, :_reduce_386,
  1, 150, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 202, :_reduce_none,
  1, 203, :_reduce_391,
  1, 259, :_reduce_none,
  2, 259, :_reduce_393,
  3, 260, :_reduce_394,
  1, 260, :_reduce_395,
  3, 204, :_reduce_396,
  3, 205, :_reduce_397,
  3, 206, :_reduce_398,
  3, 206, :_reduce_399,
  1, 263, :_reduce_400,
  3, 263, :_reduce_401,
  1, 264, :_reduce_402,
  2, 264, :_reduce_403,
  3, 207, :_reduce_404,
  3, 207, :_reduce_405,
  1, 266, :_reduce_406,
  3, 266, :_reduce_407,
  1, 261, :_reduce_408,
  2, 261, :_reduce_409,
  1, 262, :_reduce_410,
  2, 262, :_reduce_411,
  1, 265, :_reduce_412,
  0, 268, :_reduce_413,
  3, 265, :_reduce_414,
  0, 269, :_reduce_415,
  4, 265, :_reduce_416,
  1, 267, :_reduce_417,
  1, 267, :_reduce_418,
  1, 267, :_reduce_419,
  1, 267, :_reduce_none,
  2, 188, :_reduce_421,
  1, 188, :_reduce_422,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  1, 270, :_reduce_none,
  3, 258, :_reduce_427,
  1, 257, :_reduce_428,
  1, 257, :_reduce_429,
  2, 257, :_reduce_none,
  2, 257, :_reduce_none,
  1, 182, :_reduce_432,
  1, 182, :_reduce_433,
  1, 182, :_reduce_434,
  1, 182, :_reduce_435,
  1, 182, :_reduce_436,
  1, 182, :_reduce_437,
  1, 182, :_reduce_438,
  1, 182, :_reduce_439,
  1, 182, :_reduce_440,
  1, 182, :_reduce_441,
  1, 182, :_reduce_442,
  1, 208, :_reduce_443,
  1, 158, :_reduce_444,
  1, 161, :_reduce_445,
  1, 161, :_reduce_none,
  1, 218, :_reduce_447,
  3, 218, :_reduce_448,
  2, 218, :_reduce_449,
  4, 220, :_reduce_450,
  2, 220, :_reduce_451,
  6, 271, :_reduce_452,
  4, 271, :_reduce_453,
  4, 271, :_reduce_454,
  2, 271, :_reduce_455,
  4, 271, :_reduce_456,
  2, 271, :_reduce_457,
  2, 271, :_reduce_458,
  1, 271, :_reduce_459,
  1, 271, :_reduce_460,
  2, 271, :_reduce_461,
  0, 271, :_reduce_462,
  1, 274, :_reduce_none,
  1, 274, :_reduce_464,
  1, 275, :_reduce_465,
  1, 275, :_reduce_466,
  1, 275, :_reduce_467,
  1, 275, :_reduce_468,
  1, 276, :_reduce_469,
  3, 276, :_reduce_470,
  1, 217, :_reduce_none,
  1, 217, :_reduce_none,
  1, 278, :_reduce_473,
  3, 278, :_reduce_none,
  1, 279, :_reduce_475,
  3, 279, :_reduce_476,
  1, 277, :_reduce_none,
  4, 277, :_reduce_none,
  3, 277, :_reduce_none,
  2, 277, :_reduce_none,
  1, 277, :_reduce_none,
  1, 246, :_reduce_482,
  3, 246, :_reduce_483,
  3, 280, :_reduce_484,
  1, 272, :_reduce_485,
  3, 272, :_reduce_486,
  1, 281, :_reduce_none,
  1, 281, :_reduce_none,
  2, 247, :_reduce_489,
  1, 247, :_reduce_490,
  1, 282, :_reduce_none,
  1, 282, :_reduce_none,
  2, 244, :_reduce_493,
  2, 273, :_reduce_494,
  0, 273, :_reduce_495,
  1, 221, :_reduce_496,
  4, 221, :_reduce_497,
  0, 209, :_reduce_498,
  2, 209, :_reduce_499,
  1, 194, :_reduce_500,
  3, 194, :_reduce_501,
  3, 283, :_reduce_502,
  2, 283, :_reduce_503,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 175, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 171, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 250, :_reduce_none,
  1, 222, :_reduce_none,
  1, 222, :_reduce_none,
  0, 142, :_reduce_none,
  1, 142, :_reduce_none,
  0, 189, :_reduce_none,
  1, 189, :_reduce_none,
  0, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 193, :_reduce_none,
  1, 219, :_reduce_none,
  1, 219, :_reduce_none,
  1, 144, :_reduce_none,
  2, 144, :_reduce_none,
  0, 191, :_reduce_527 ]

racc_reduce_n = 528

racc_shift_n = 928

racc_token_table = {
  false => 0,
  :error => 1,
  :kCLASS => 2,
  :kMODULE => 3,
  :kDEF => 4,
  :kUNDEF => 5,
  :kBEGIN => 6,
  :kRESCUE => 7,
  :kENSURE => 8,
  :kEND => 9,
  :kIF => 10,
  :kUNLESS => 11,
  :kTHEN => 12,
  :kELSIF => 13,
  :kELSE => 14,
  :kCASE => 15,
  :kWHEN => 16,
  :kWHILE => 17,
  :kUNTIL => 18,
  :kFOR => 19,
  :kBREAK => 20,
  :kNEXT => 21,
  :kREDO => 22,
  :kRETRY => 23,
  :kIN => 24,
  :kDO => 25,
  :kDO_COND => 26,
  :kDO_BLOCK => 27,
  :kDO_LAMBDA => 28,
  :kRETURN => 29,
  :kYIELD => 30,
  :kSUPER => 31,
  :kSELF => 32,
  :kNIL => 33,
  :kTRUE => 34,
  :kFALSE => 35,
  :kAND => 36,
  :kOR => 37,
  :kNOT => 38,
  :kIF_MOD => 39,
  :kUNLESS_MOD => 40,
  :kWHILE_MOD => 41,
  :kUNTIL_MOD => 42,
  :kRESCUE_MOD => 43,
  :kALIAS => 44,
  :kDEFINED => 45,
  :klBEGIN => 46,
  :klEND => 47,
  :k__LINE__ => 48,
  :k__FILE__ => 49,
  :k__ENCODING__ => 50,
  :tIDENTIFIER => 51,
  :tFID => 52,
  :tGVAR => 53,
  :tIVAR => 54,
  :tCONSTANT => 55,
  :tLABEL => 56,
  :tCVAR => 57,
  :tNTH_REF => 58,
  :tBACK_REF => 59,
  :tSTRING_CONTENT => 60,
  :tINTEGER => 61,
  :tFLOAT => 62,
  :tREGEXP_END => 63,
  :tUPLUS => 64,
  :tUMINUS => 65,
  :tUMINUS_NUM => 66,
  :tPOW => 67,
  :tCMP => 68,
  :tEQ => 69,
  :tEQQ => 70,
  :tNEQ => 71,
  :tGEQ => 72,
  :tLEQ => 73,
  :tANDOP => 74,
  :tOROP => 75,
  :tMATCH => 76,
  :tNMATCH => 77,
  :tDOT => 78,
  :tDOT2 => 79,
  :tDOT3 => 80,
  :tAREF => 81,
  :tASET => 82,
  :tLSHFT => 83,
  :tRSHFT => 84,
  :tCOLON2 => 85,
  :tCOLON3 => 86,
  :tOP_ASGN => 87,
  :tASSOC => 88,
  :tLPAREN => 89,
  :tLPAREN2 => 90,
  :tRPAREN => 91,
  :tLPAREN_ARG => 92,
  :ARRAY_BEG => 93,
  :tRBRACK => 94,
  :tLBRACE => 95,
  :tLBRACE_ARG => 96,
  :tSTAR => 97,
  :tSTAR2 => 98,
  :tAMPER => 99,
  :tAMPER2 => 100,
  :tTILDE => 101,
  :tPERCENT => 102,
  :tDIVIDE => 103,
  :tPLUS => 104,
  :tMINUS => 105,
  :tLT => 106,
  :tGT => 107,
  :tPIPE => 108,
  :tBANG => 109,
  :tCARET => 110,
  :tLCURLY => 111,
  :tRCURLY => 112,
  :tBACK_REF2 => 113,
  :tSYMBEG => 114,
  :tSTRING_BEG => 115,
  :tXSTRING_BEG => 116,
  :tREGEXP_BEG => 117,
  :tWORDS_BEG => 118,
  :tAWORDS_BEG => 119,
  :tSTRING_DBEG => 120,
  :tSTRING_DVAR => 121,
  :tSTRING_END => 122,
  :tSTRING => 123,
  :tSYMBOL => 124,
  :tNL => 125,
  :tEH => 126,
  :tCOLON => 127,
  :tCOMMA => 128,
  :tSPACE => 129,
  :tSEMI => 130,
  :tLAMBDA => 131,
  :tLAMBEG => 132,
  :tLBRACK2 => 133,
  :tLBRACK => 134,
  :tEQL => 135,
  :tLOWEST => 136,
  "-@NUM" => 137 }

racc_nt_base = 138

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "kCLASS",
  "kMODULE",
  "kDEF",
  "kUNDEF",
  "kBEGIN",
  "kRESCUE",
  "kENSURE",
  "kEND",
  "kIF",
  "kUNLESS",
  "kTHEN",
  "kELSIF",
  "kELSE",
  "kCASE",
  "kWHEN",
  "kWHILE",
  "kUNTIL",
  "kFOR",
  "kBREAK",
  "kNEXT",
  "kREDO",
  "kRETRY",
  "kIN",
  "kDO",
  "kDO_COND",
  "kDO_BLOCK",
  "kDO_LAMBDA",
  "kRETURN",
  "kYIELD",
  "kSUPER",
  "kSELF",
  "kNIL",
  "kTRUE",
  "kFALSE",
  "kAND",
  "kOR",
  "kNOT",
  "kIF_MOD",
  "kUNLESS_MOD",
  "kWHILE_MOD",
  "kUNTIL_MOD",
  "kRESCUE_MOD",
  "kALIAS",
  "kDEFINED",
  "klBEGIN",
  "klEND",
  "k__LINE__",
  "k__FILE__",
  "k__ENCODING__",
  "tIDENTIFIER",
  "tFID",
  "tGVAR",
  "tIVAR",
  "tCONSTANT",
  "tLABEL",
  "tCVAR",
  "tNTH_REF",
  "tBACK_REF",
  "tSTRING_CONTENT",
  "tINTEGER",
  "tFLOAT",
  "tREGEXP_END",
  "tUPLUS",
  "tUMINUS",
  "tUMINUS_NUM",
  "tPOW",
  "tCMP",
  "tEQ",
  "tEQQ",
  "tNEQ",
  "tGEQ",
  "tLEQ",
  "tANDOP",
  "tOROP",
  "tMATCH",
  "tNMATCH",
  "tDOT",
  "tDOT2",
  "tDOT3",
  "tAREF",
  "tASET",
  "tLSHFT",
  "tRSHFT",
  "tCOLON2",
  "tCOLON3",
  "tOP_ASGN",
  "tASSOC",
  "tLPAREN",
  "tLPAREN2",
  "tRPAREN",
  "tLPAREN_ARG",
  "ARRAY_BEG",
  "tRBRACK",
  "tLBRACE",
  "tLBRACE_ARG",
  "tSTAR",
  "tSTAR2",
  "tAMPER",
  "tAMPER2",
  "tTILDE",
  "tPERCENT",
  "tDIVIDE",
  "tPLUS",
  "tMINUS",
  "tLT",
  "tGT",
  "tPIPE",
  "tBANG",
  "tCARET",
  "tLCURLY",
  "tRCURLY",
  "tBACK_REF2",
  "tSYMBEG",
  "tSTRING_BEG",
  "tXSTRING_BEG",
  "tREGEXP_BEG",
  "tWORDS_BEG",
  "tAWORDS_BEG",
  "tSTRING_DBEG",
  "tSTRING_DVAR",
  "tSTRING_END",
  "tSTRING",
  "tSYMBOL",
  "tNL",
  "tEH",
  "tCOLON",
  "tCOMMA",
  "tSPACE",
  "tSEMI",
  "tLAMBDA",
  "tLAMBEG",
  "tLBRACK2",
  "tLBRACK",
  "tEQL",
  "tLOWEST",
  "\"-@NUM\"",
  "$start",
  "program",
  "top_compstmt",
  "top_stmts",
  "opt_terms",
  "top_stmt",
  "terms",
  "stmt",
  "bodystmt",
  "compstmt",
  "opt_rescue",
  "opt_else",
  "opt_ensure",
  "stmts",
  "fitem",
  "undef_list",
  "expr_value",
  "lhs",
  "command_call",
  "mlhs",
  "var_lhs",
  "primary_value",
  "aref_args",
  "backref",
  "mrhs",
  "arg_value",
  "expr",
  "@1",
  "arg",
  "command",
  "block_command",
  "call_args",
  "block_call",
  "operation2",
  "command_args",
  "cmd_brace_block",
  "opt_block_var",
  "operation",
  "mlhs_basic",
  "mlhs_entry",
  "mlhs_head",
  "mlhs_item",
  "mlhs_node",
  "mlhs_post",
  "variable",
  "cname",
  "cpath",
  "fname",
  "op",
  "reswords",
  "symbol",
  "opt_nl",
  "primary",
  "none",
  "args",
  "trailer",
  "assocs",
  "paren_args",
  "opt_paren_args",
  "opt_block_arg",
  "block_arg",
  "call_args2",
  "open_args",
  "@2",
  "literal",
  "strings",
  "xstring",
  "regexp",
  "words",
  "awords",
  "var_ref",
  "assoc_list",
  "brace_block",
  "method_call",
  "lambda",
  "then",
  "if_tail",
  "do",
  "case_body",
  "for_var",
  "superclass",
  "term",
  "f_arglist",
  "singleton",
  "dot_or_colon",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10",
  "@11",
  "@12",
  "@13",
  "@14",
  "@15",
  "@16",
  "@17",
  "f_larglist",
  "lambda_body",
  "block_param",
  "f_block_optarg",
  "f_block_opt",
  "block_args_tail",
  "f_block_arg",
  "opt_block_args_tail",
  "f_arg",
  "f_rest_arg",
  "do_block",
  "@18",
  "operation3",
  "@19",
  "@20",
  "cases",
  "@21",
  "exc_list",
  "exc_var",
  "numeric",
  "dsym",
  "string",
  "string1",
  "string_contents",
  "xstring_contents",
  "word_list",
  "word",
  "string_content",
  "qword_list",
  "string_dvar",
  "@22",
  "@23",
  "sym",
  "f_args",
  "f_optarg",
  "opt_f_block_arg",
  "f_norm_arg",
  "f_bad_arg",
  "f_arg_item",
  "f_margs",
  "f_marg",
  "f_marg_list",
  "f_opt",
  "restarg_mark",
  "blkarg_mark",
  "assoc" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

def _reduce_2(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_3(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_4(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_5(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 6 omitted

def _reduce_7(val, _values, result)
                      result = val[2]
                    
    result
end

def _reduce_8(val, _values, result)
                      result = new_body(val[0], val[1], val[2], val[3])
                    
    result
end

def _reduce_9(val, _values, result)
                      result = new_compstmt val[0]
                    
    result
end

def _reduce_10(val, _values, result)
                      result = new_block
                    
    result
end

def _reduce_11(val, _values, result)
                      result = new_block val[0]
                    
    result
end

def _reduce_12(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_13(val, _values, result)
                      lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_14(val, _values, result)
                      result = new_alias(val[0], val[1], val[3])
                    
    result
end

def _reduce_15(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

# reduce 16 omitted

def _reduce_17(val, _values, result)
                      result = s(:valias, value(val[1]).to_sym, value(val[2]).to_sym)
                    
    result
end

def _reduce_18(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_19(val, _values, result)
                      result = new_if(val[1], val[2], val[0], nil)
                    
    result
end

def _reduce_20(val, _values, result)
                      result = new_if(val[1], val[2], nil, val[0])
                    
    result
end

def _reduce_21(val, _values, result)
                      result = new_while(val[1], val[2], val[0])
                    
    result
end

def _reduce_22(val, _values, result)
                      result = new_until(val[1], val[2], val[0])
                    
    result
end

def _reduce_23(val, _values, result)
                      result = new_rescue_mod(val[1], val[0], val[2])
                    
    result
end

# reduce 24 omitted

def _reduce_25(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_26(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_27(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

# reduce 28 omitted

def _reduce_29(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

def _reduce_33(val, _values, result)
                      result = new_assign val[0], val[1], s(:svalue, val[2])
                    
    result
end

def _reduce_34(val, _values, result)
                      result = s(:masgn, val[0], s(:to_ary, val[2]))
                    
    result
end

def _reduce_35(val, _values, result)
                      result = s(:masgn, val[0], val[2])
                    
    result
end

# reduce 36 omitted

# reduce 37 omitted

def _reduce_38(val, _values, result)
                      result = s(:and, val[0], val[2])
                    
    result
end

def _reduce_39(val, _values, result)
                      result = s(:or, val[0], val[2])
                    
    result
end

def _reduce_40(val, _values, result)
                      result = new_unary_call(['!', []], val[1])
                    
    result
end

def _reduce_41(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

def _reduce_46(val, _values, result)
                      result = new_return(val[0], val[1])
                    
    result
end

def _reduce_47(val, _values, result)
                      result = new_break(val[0], val[1])
                    
    result
end

def _reduce_48(val, _values, result)
                      result = new_next(val[0], val[1])
                    
    result
end

# reduce 49 omitted

# reduce 50 omitted

# reduce 51 omitted

# reduce 52 omitted

def _reduce_53(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

# reduce 54 omitted

def _reduce_55(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

# reduce 56 omitted

def _reduce_57(val, _values, result)
                    result = new_call(val[0], val[2], val[3])
                  
    result
end

# reduce 58 omitted

def _reduce_59(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_60(val, _values, result)
                      result = new_yield val[1]
                    
    result
end

def _reduce_61(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_62(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_63(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_64(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_65(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_66(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

def _reduce_67(val, _values, result)
                      result = val[0] << s(:splat, val[2])
                    
    result
end

# reduce 68 omitted

def _reduce_69(val, _values, result)
                      result = val[0] << s(:splat)
                    
    result
end

# reduce 70 omitted

def _reduce_71(val, _values, result)
                      result = s(:array, s(:splat, val[1]))
                    
    result
end

def _reduce_72(val, _values, result)
                      result = s(:array, s(:splat))
                    
    result
end

# reduce 73 omitted

def _reduce_74(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_75(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_76(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_77(val, _values, result)
                      result = val[0] << val[1]
                    
    result
end

# reduce 78 omitted

# reduce 79 omitted

def _reduce_80(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_81(val, _values, result)
                      args = val[2] ? val[2] : []
                      result = s(:attrasgn, val[0], :[]=, s(:arglist, *args))
                    
    result
end

def _reduce_82(val, _values, result)
                      result = new_call val[0], val[2], []
                    
    result
end

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

def _reduce_88(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_89(val, _values, result)
                      result = new_attrasgn(val[0], :[]=, val[2])
                    
    result
end

def _reduce_90(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_91(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_92(val, _values, result)
                      result = new_attrasgn(val[0], op_to_setter(val[2]))
                    
    result
end

def _reduce_93(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_94(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

# reduce 95 omitted

# reduce 96 omitted

def _reduce_97(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_98(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_99(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

# reduce 100 omitted

# reduce 101 omitted

# reduce 102 omitted

def _reduce_103(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_104(val, _values, result)
                      lexer.lex_state = :expr_end
                      result = val[0]
                    
    result
end

def _reduce_105(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 106 omitted

def _reduce_107(val, _values, result)
                      result = s(:undef, val[0])
                    
    result
end

def _reduce_108(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

# reduce 117 omitted

# reduce 118 omitted

# reduce 119 omitted

# reduce 120 omitted

# reduce 121 omitted

# reduce 122 omitted

# reduce 123 omitted

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

# reduce 127 omitted

# reduce 128 omitted

# reduce 129 omitted

# reduce 130 omitted

# reduce 131 omitted

# reduce 132 omitted

# reduce 133 omitted

# reduce 134 omitted

# reduce 135 omitted

# reduce 136 omitted

# reduce 137 omitted

# reduce 138 omitted

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

# reduce 144 omitted

# reduce 145 omitted

# reduce 146 omitted

# reduce 147 omitted

# reduce 148 omitted

# reduce 149 omitted

# reduce 150 omitted

# reduce 151 omitted

# reduce 152 omitted

# reduce 153 omitted

# reduce 154 omitted

# reduce 155 omitted

# reduce 156 omitted

# reduce 157 omitted

# reduce 158 omitted

# reduce 159 omitted

# reduce 160 omitted

# reduce 161 omitted

# reduce 162 omitted

# reduce 163 omitted

# reduce 164 omitted

# reduce 165 omitted

# reduce 166 omitted

# reduce 167 omitted

# reduce 168 omitted

# reduce 169 omitted

# reduce 170 omitted

# reduce 171 omitted

# reduce 172 omitted

# reduce 173 omitted

# reduce 174 omitted

# reduce 175 omitted

# reduce 176 omitted

# reduce 177 omitted

# reduce 178 omitted

# reduce 179 omitted

# reduce 180 omitted

# reduce 181 omitted

# reduce 182 omitted

def _reduce_183(val, _values, result)
                      result = new_assign(val[0], val[1], val[2])
                    
    result
end

def _reduce_184(val, _values, result)
                      result = new_assign val[0], val[1], s(:rescue_mod, val[2], val[4])
                    
    result
end

def _reduce_185(val, _values, result)
                      result = new_op_asgn val[1], val[0], val[2]
                    
    result
end

def _reduce_186(val, _values, result)
                      result = new_op_asgn1(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_187(val, _values, result)
                      result = s(:op_asgn2, val[0], op_to_setter(val[2]), value(val[3]).to_sym, val[4])
                    
    result
end

# reduce 188 omitted

# reduce 189 omitted

# reduce 190 omitted

# reduce 191 omitted

# reduce 192 omitted

def _reduce_193(val, _values, result)
                      result = new_irange(val[0], val[1], val[2])
                    
    result
end

def _reduce_194(val, _values, result)
                      result = new_erange(val[0], val[1], val[2])
                    
    result
end

def _reduce_195(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_196(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_197(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_198(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_199(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_200(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

# reduce 201 omitted

# reduce 202 omitted

def _reduce_203(val, _values, result)
                      result = new_call val[1], [:"+@", []], []
                      result = val[1] if [:int, :float].include? val[1].type
                    
    result
end

def _reduce_204(val, _values, result)
                      result = new_call val[1], [:"-@", []], []
                      if val[1].type == :int
                        val[1][1] = -val[1][1]
                        result = val[1]
                      elsif val[1].type == :float
                        val[1][1] = -val[1][1].to_f
                        result = val[1]
                      end
                    
    result
end

def _reduce_205(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_206(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_207(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_208(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_209(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_210(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_211(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_212(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_213(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_214(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_215(val, _values, result)
                      result = new_unary_call(['!', []], new_binary_call(
                                 val[0], ['==', []], val[2]))
                    
    result
end

def _reduce_216(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_217(val, _values, result)
                      result = new_not(val[1], new_binary_call(
                                 val[0], ['=~', []], val[2]))
                    
    result
end

def _reduce_218(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_219(val, _values, result)
                      result = new_unary_call(val[0], val[1])
                    
    result
end

def _reduce_220(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_221(val, _values, result)
                      result = new_binary_call(val[0], val[1], val[2])
                    
    result
end

def _reduce_222(val, _values, result)
                      result = new_and(val[0], val[1], val[2])
                    
    result
end

def _reduce_223(val, _values, result)
                      result = new_or(val[0], val[1], val[2])
                    
    result
end

def _reduce_224(val, _values, result)
                      result = s(:defined, val[2])
                    
    result
end

def _reduce_225(val, _values, result)
                      result = new_if(val[1], val[0], val[2], val[4])
                    
    result
end

# reduce 226 omitted

# reduce 227 omitted

def _reduce_228(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_229(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_230(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_231(val, _values, result)
                      val[0] << s(:hash, *val[2])
                      result = val[0]
                    
    result
end

def _reduce_232(val, _values, result)
                      result = [s(:hash, *val[0])]
                    
    result
end

def _reduce_233(val, _values, result)
                      result = []
                    
    result
end

def _reduce_234(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 235 omitted

# reduce 236 omitted

def _reduce_237(val, _values, result)
                      result = []
                    
    result
end

# reduce 238 omitted

def _reduce_239(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_240(val, _values, result)
                      result = val[0]
                      add_block_pass val[0], val[1]
                    
    result
end

def _reduce_241(val, _values, result)
                      result = [new_hash(nil, val[0], nil)]
                      add_block_pass result, val[1]
                    
    result
end

def _reduce_242(val, _values, result)
                      result = val[0]
                      result << new_hash(nil, val[2], nil)
                    
    result
end

def _reduce_243(val, _values, result)
                      result = []
                      add_block_pass result, val[0]
                    
    result
end

# reduce 244 omitted

# reduce 245 omitted

def _reduce_246(val, _values, result)
                      lexer.cmdarg_push 1
                    
    result
end

def _reduce_247(val, _values, result)
                      lexer.cmdarg_pop
                      result = val[1]
                    
    result
end

# reduce 248 omitted

def _reduce_249(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_250(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_251(val, _values, result)
                      result = new_block_pass(val[0], val[1])
                    
    result
end

def _reduce_252(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_253(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_254(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_255(val, _values, result)
                      result = [new_splat(val[0], val[1])]
                    
    result
end

def _reduce_256(val, _values, result)
                      result = val[0] << val[2]
                    
    result
end

def _reduce_257(val, _values, result)
                      result  = val[0] << new_splat(val[2], val[3])
                    
    result
end

def _reduce_258(val, _values, result)
                      val[0] << val[2]
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_259(val, _values, result)
                      val[0] << s(:splat, val[3])
                      result = s(:array, *val[0])
                    
    result
end

def _reduce_260(val, _values, result)
                      result = s(:splat, val[1])
                    
    result
end

# reduce 261 omitted

# reduce 262 omitted

# reduce 263 omitted

# reduce 264 omitted

# reduce 265 omitted

# reduce 266 omitted

# reduce 267 omitted

# reduce 268 omitted

# reduce 269 omitted

def _reduce_270(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_271(val, _values, result)
                      result = s(:begin, val[2])
                    
    result
end

def _reduce_272(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_273(val, _values, result)
                      result = new_paren(val[0], val[1], val[2])
                    
    result
end

def _reduce_274(val, _values, result)
                      result = new_colon2(val[0], val[1], val[2])
                    
    result
end

def _reduce_275(val, _values, result)
                      result = new_colon3(val[0], val[1])
                    
    result
end

def _reduce_276(val, _values, result)
                      result = new_call val[0], [:[], []], val[2]
                    
    result
end

def _reduce_277(val, _values, result)
                      result = new_array(val[0], val[1], val[2])
                    
    result
end

def _reduce_278(val, _values, result)
                      result = new_hash(val[0], val[1], val[2])
                    
    result
end

def _reduce_279(val, _values, result)
                      result = new_return(val[0])
                    
    result
end

def _reduce_280(val, _values, result)
                      result = new_yield val[2]
                    
    result
end

def _reduce_281(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_282(val, _values, result)
                      result = s(:yield)
                    
    result
end

def _reduce_283(val, _values, result)
                      result = s(:defined, val[3])
                    
    result
end

def _reduce_284(val, _values, result)
                      result = new_unary_call(['!', []], val[2])
                    
    result
end

def _reduce_285(val, _values, result)
                      result = new_unary_call(['!', []], new_nil(val[0]))
                    
    result
end

def _reduce_286(val, _values, result)
                      result = new_call(nil, val[0], [])
                      result << val[1]
                    
    result
end

# reduce 287 omitted

def _reduce_288(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

def _reduce_289(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_290(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

def _reduce_291(val, _values, result)
                      result = new_if(val[0], val[1], val[4], val[3])
                    
    result
end

def _reduce_292(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_293(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_294(val, _values, result)
                      result = s(:while, val[2], val[5])
                    
    result
end

def _reduce_295(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_296(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_297(val, _values, result)
                      result = s(:until, val[2], val[5])
                    
    result
end

def _reduce_298(val, _values, result)
                      result = s(:case, val[1], *val[3])
                    
    result
end

def _reduce_299(val, _values, result)
                      result = s(:case, nil, *val[2])
                    
    result
end

def _reduce_300(val, _values, result)
                      result = s(:case, nil, val[3])
                    
    result
end

def _reduce_301(val, _values, result)
                      lexer.cond_push 1
                      result = lexer.line
                    
    result
end

def _reduce_302(val, _values, result)
                      lexer.cond_pop
                    
    result
end

def _reduce_303(val, _values, result)
                      result = s(:for, val[4], val[1], val[7])
                    
    result
end

def _reduce_304(val, _values, result)
                      # ...
                    
    result
end

def _reduce_305(val, _values, result)
                      result = new_class val[0], val[1], val[2], val[4], val[5]
                    
    result
end

def _reduce_306(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_307(val, _values, result)
                      # ...
                    
    result
end

def _reduce_308(val, _values, result)
                      result = new_sclass(val[0], val[3], val[6], val[7])
                    
    result
end

def _reduce_309(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_310(val, _values, result)
                      # ...
                    
    result
end

def _reduce_311(val, _values, result)
                      result = new_module(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_312(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_313(val, _values, result)
                      result = new_def(val[0], nil, val[1], val[3], val[4], val[5])
                      pop_scope
                    
    result
end

def _reduce_314(val, _values, result)
                       lexer.lex_state = :expr_fname
                    
    result
end

def _reduce_315(val, _values, result)
                      push_scope
                    
    result
end

def _reduce_316(val, _values, result)
                      result = new_def(val[0], val[1], val[4], val[6], val[7], val[8])
                      pop_scope
                    
    result
end

def _reduce_317(val, _values, result)
                      result = new_break(val[0])
                    
    result
end

def _reduce_318(val, _values, result)
                      result = s(:next)
                    
    result
end

def _reduce_319(val, _values, result)
                      result = s(:redo)
                    
    result
end

# reduce 320 omitted

# reduce 321 omitted

# reduce 322 omitted

# reduce 323 omitted

# reduce 324 omitted

# reduce 325 omitted

# reduce 326 omitted

# reduce 327 omitted

# reduce 328 omitted

def _reduce_329(val, _values, result)
                      result = new_call nil, [:lambda, []], []
                      result << new_iter(val[0], val[1])
                    
    result
end

def _reduce_330(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_331(val, _values, result)
                      result = nil
                    
    result
end

# reduce 332 omitted

# reduce 333 omitted

def _reduce_334(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_335(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_336(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_337(val, _values, result)
                      result = new_if(val[0], val[1], val[3], val[4])
                    
    result
end

# reduce 338 omitted

def _reduce_339(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_340(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_341(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_342(val, _values, result)
                      result = new_assign(new_assignable(new_ident(
                                  val[0])), val[1], val[2])
                    
    result
end

# reduce 343 omitted

def _reduce_344(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_345(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_346(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_347(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_348(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_349(val, _values, result)
                      nil
                    
    result
end

def _reduce_350(val, _values, result)
                      result = new_block_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_351(val, _values, result)
                      result = new_block_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_352(val, _values, result)
                      result = new_block_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_353(val, _values, result)
                      result = new_block_args(val[0], nil, nil, nil)
                    
    result
end

def _reduce_354(val, _values, result)
                      result = new_block_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_355(val, _values, result)
                      result = new_block_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_356(val, _values, result)
                      result = new_block_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_357(val, _values, result)
                      result = new_block_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_358(val, _values, result)
                      result = new_block_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_359(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_360(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_361(val, _values, result)
                      val[0] << val[1]
                      result = val[0]
                    
    result
end

# reduce 362 omitted

# reduce 363 omitted

def _reduce_364(val, _values, result)
                      result = new_call(nil, val[0], val[1])
                    
    result
end

def _reduce_365(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_366(val, _values, result)
                      result = new_call(val[0], [:call, []], val[2])
                    
    result
end

def _reduce_367(val, _values, result)
                      result = new_call(val[0], val[2], val[3])
                    
    result
end

def _reduce_368(val, _values, result)
                      result = new_call(val[0], val[2])
                    
    result
end

def _reduce_369(val, _values, result)
                      result = new_super(val[0], val[1])
                    
    result
end

def _reduce_370(val, _values, result)
                      result = new_super(val[0], nil)
                    
    result
end

def _reduce_371(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_372(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_373(val, _values, result)
                      push_scope :block
                      result = lexer.line
                    
    result
end

def _reduce_374(val, _values, result)
                      result = new_iter val[2], val[3]
                      pop_scope
                    
    result
end

def _reduce_375(val, _values, result)
                      result = lexer.line
                    
    result
end

def _reduce_376(val, _values, result)
                      part = s(:when, s(:array, *val[2]), val[4])
                      result = [part]
                      result.push *val[5] if val[5]
                    
    result
end

def _reduce_377(val, _values, result)
                      result = [val[0]]
                    
    result
end

# reduce 378 omitted

def _reduce_379(val, _values, result)
                      exc = val[1] || s(:array)
                      exc << new_assign(val[2], val[2], s(:gvar, '$!'.intern)) if val[2]
                      result = [s(:resbody, exc, val[4])]
                      result.push val[5].first if val[5]
                    
    result
end

def _reduce_380(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_381(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

# reduce 382 omitted

# reduce 383 omitted

def _reduce_384(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_385(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_386(val, _values, result)
                      result = val[1].nil? ? s(:nil) : val[1]
                    
    result
end

# reduce 387 omitted

# reduce 388 omitted

# reduce 389 omitted

# reduce 390 omitted

def _reduce_391(val, _values, result)
                      result = new_str val[0]
                    
    result
end

# reduce 392 omitted

def _reduce_393(val, _values, result)
                    result = str_append val[0], val[1]
                  
    result
end

def _reduce_394(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_395(val, _values, result)
                      result = s(:str, value(val[0]))
                    
    result
end

def _reduce_396(val, _values, result)
                      result = new_xstr(val[0], val[1], val[2])
                    
    result
end

def _reduce_397(val, _values, result)
                      result = new_regexp val[1], val[2]
                    
    result
end

def _reduce_398(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_399(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_400(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_401(val, _values, result)
                      part = val[1]
                      part = s(:dstr, "", val[1]) if part.type == :evstr
                      result = val[0] << part
                    
    result
end

def _reduce_402(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_403(val, _values, result)
                      result = val[0].concat([val[1]])
                    
    result
end

def _reduce_404(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_405(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_406(val, _values, result)
                      result = s(:array)
                    
    result
end

def _reduce_407(val, _values, result)
                      result = val[0] << s(:str, value(val[1]))
                    
    result
end

def _reduce_408(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_409(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_410(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_411(val, _values, result)
                      result = str_append val[0], val[1]
                    
    result
end

def _reduce_412(val, _values, result)
                      result = new_str_content(val[0])
                    
    result
end

def _reduce_413(val, _values, result)
                      result = lexer.strterm
                      lexer.strterm = nil
                    
    result
end

def _reduce_414(val, _values, result)
                      lexer.strterm = val[1]
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_415(val, _values, result)
                      lexer.cond_push 0
                      lexer.cmdarg_push 0
                      result = lexer.strterm
                      lexer.strterm = nil
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_416(val, _values, result)
                      lexer.strterm = val[1]
                      lexer.cond_lexpop
                      lexer.cmdarg_lexpop
                      result = new_evstr(val[2])
                    
    result
end

def _reduce_417(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_418(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_419(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

# reduce 420 omitted

def _reduce_421(val, _values, result)
                      result = new_sym(val[1])
                      lexer.lex_state = :expr_end
                    
    result
end

def _reduce_422(val, _values, result)
                      result = new_sym(val[0])
                    
    result
end

# reduce 423 omitted

# reduce 424 omitted

# reduce 425 omitted

# reduce 426 omitted

def _reduce_427(val, _values, result)
                      result = new_dsym val[1]
                    
    result
end

def _reduce_428(val, _values, result)
                      result = new_int(val[0])
                    
    result
end

def _reduce_429(val, _values, result)
                      result = new_float(val[0])
                    
    result
end

# reduce 430 omitted

# reduce 431 omitted

def _reduce_432(val, _values, result)
                      result = new_ident(val[0])
                    
    result
end

def _reduce_433(val, _values, result)
                      result = new_ivar(val[0])
                    
    result
end

def _reduce_434(val, _values, result)
                      result = new_gvar(val[0])
                    
    result
end

def _reduce_435(val, _values, result)
                      result = new_const(val[0])
                    
    result
end

def _reduce_436(val, _values, result)
                      result = new_cvar(val[0])
                    
    result
end

def _reduce_437(val, _values, result)
                      result = new_nil(val[0])
                    
    result
end

def _reduce_438(val, _values, result)
                      result = new_self(val[0])
                    
    result
end

def _reduce_439(val, _values, result)
                      result = new_true(val[0])
                    
    result
end

def _reduce_440(val, _values, result)
                      result = new_false(val[0])
                    
    result
end

def _reduce_441(val, _values, result)
                      result = new___FILE__(val[0])
                    
    result
end

def _reduce_442(val, _values, result)
                      result = new___LINE__(val[0])
                    
    result
end

def _reduce_443(val, _values, result)
                      result = new_var_ref(val[0])
                    
    result
end

def _reduce_444(val, _values, result)
                      result = new_assignable val[0]
                    
    result
end

def _reduce_445(val, _values, result)
                      result = s(:nth_ref, value(val[0]))
                    
    result
end

# reduce 446 omitted

def _reduce_447(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_448(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_449(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_450(val, _values, result)
                      result = val[1]
                      lexer.lex_state = :expr_beg
                    
    result
end

def _reduce_451(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_452(val, _values, result)
                      result = new_args(val[0], val[2], val[4], val[5])
                    
    result
end

def _reduce_453(val, _values, result)
                      result = new_args(val[0], val[2], nil, val[3])
                    
    result
end

def _reduce_454(val, _values, result)
                      result = new_args(val[0], nil, val[2], val[3])
                    
    result
end

def _reduce_455(val, _values, result)
                      result = new_args(val[0], nil, nil, val[1])
                    
    result
end

def _reduce_456(val, _values, result)
                      result = new_args(nil, val[0], val[2], val[3])
                    
    result
end

def _reduce_457(val, _values, result)
                      result = new_args(nil, val[0], nil, val[1])
                    
    result
end

def _reduce_458(val, _values, result)
                      result = new_args(nil, nil, val[0], val[1])
                    
    result
end

def _reduce_459(val, _values, result)
                      result = new_args(nil, nil, nil, val[0])
                    
    result
end

def _reduce_460(val, _values, result)
                      result = new_kwargs(val[0], nil)
                    
    result
end

def _reduce_461(val, _values, result)
                      result = new_kwargs(val[0], val[1])
                    
    result
end

def _reduce_462(val, _values, result)
                      result = new_args(nil, nil, nil, nil)
                    
    result
end

# reduce 463 omitted

def _reduce_464(val, _values, result)
                      result = value(val[0]).to_sym
                      scope.add_local result
                    
    result
end

def _reduce_465(val, _values, result)
                      raise 'formal argument cannot be a constant'
                    
    result
end

def _reduce_466(val, _values, result)
                      raise 'formal argument cannot be an instance variable'
                    
    result
end

def _reduce_467(val, _values, result)
                      raise 'formal argument cannot be a class variable'
                    
    result
end

def _reduce_468(val, _values, result)
                      raise 'formal argument cannot be a global variable'
                    
    result
end

def _reduce_469(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_470(val, _values, result)
                      result = val[1]
                    
    result
end

# reduce 471 omitted

# reduce 472 omitted

def _reduce_473(val, _values, result)
                      result = s(:lasgn, val[0])
                    
    result
end

# reduce 474 omitted

def _reduce_475(val, _values, result)
                      result = s(:array, val[0])
                    
    result
end

def _reduce_476(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

# reduce 477 omitted

# reduce 478 omitted

# reduce 479 omitted

# reduce 480 omitted

# reduce 481 omitted

def _reduce_482(val, _values, result)
                      result = [val[0]]
                    
    result
end

def _reduce_483(val, _values, result)
                      val[0] << val[2]
                      result = val[0]
                    
    result
end

def _reduce_484(val, _values, result)
                      result = new_assign(new_assignable(new_ident(val[0])), val[1], val[2])
                    
    result
end

def _reduce_485(val, _values, result)
                      result = s(:block, val[0])
                    
    result
end

def _reduce_486(val, _values, result)
                      result = val[0]
                      val[0] << val[2]
                    
    result
end

# reduce 487 omitted

# reduce 488 omitted

def _reduce_489(val, _values, result)
                      result = "*#{value(val[1])}".to_sym
                    
    result
end

def _reduce_490(val, _values, result)
                      result = :"*"
                    
    result
end

# reduce 491 omitted

# reduce 492 omitted

def _reduce_493(val, _values, result)
                      result = "&#{value(val[1])}".to_sym
                    
    result
end

def _reduce_494(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_495(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_496(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_497(val, _values, result)
                      result = val[1]
                    
    result
end

def _reduce_498(val, _values, result)
                      result = []
                    
    result
end

def _reduce_499(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_500(val, _values, result)
                      result = val[0]
                    
    result
end

def _reduce_501(val, _values, result)
                      result = val[0].push(*val[2])
                    
    result
end

def _reduce_502(val, _values, result)
                      result = [val[0], val[2]]
                    
    result
end

def _reduce_503(val, _values, result)
                      result = [new_sym(val[0]), val[1]]
                    
    result
end

# reduce 504 omitted

# reduce 505 omitted

# reduce 506 omitted

# reduce 507 omitted

# reduce 508 omitted

# reduce 509 omitted

# reduce 510 omitted

# reduce 511 omitted

# reduce 512 omitted

# reduce 513 omitted

# reduce 514 omitted

# reduce 515 omitted

# reduce 516 omitted

# reduce 517 omitted

# reduce 518 omitted

# reduce 519 omitted

# reduce 520 omitted

# reduce 521 omitted

# reduce 522 omitted

# reduce 523 omitted

# reduce 524 omitted

# reduce 525 omitted

# reduce 526 omitted

def _reduce_527(val, _values, result)
                      result = nil
                    
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module Opal
